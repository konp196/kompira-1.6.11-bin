=====================================
操作ガイド
=====================================

:著者: Kompira 開発チーム

.. highlight:: none

.. _usage_introduction:

-----------------------
はじめに
-----------------------

Kompiraが提供するWebユーザーインターフェースによってKompiraの機能を利用するための情報について記述します。

.. _login:

-----------------------
基本的な操作方法
-----------------------

^^^^^^^^^^^^^^^^^^^^^^^^
ログインとログアウト
^^^^^^^^^^^^^^^^^^^^^^^^

以下のURLにアクセスすることで、Kompiraのログイン画面にアクセスすることができます。

.. code::

    https://<Hostname or ipaddress of Kompira server>/

Kompiraログイン画面からユーザー名とパスワードを入力して、ログインしてください。

デフォルトで使用可能なユーザー一覧は :ref:`settings_user` を参照してください。

ログインすると画面右上部にログインしたユーザー名が表示されます。
ユーザ名をクリックするとドロップダウンメニューが表示されるので、その中から「ログアウト」を選択することでログアウトできます。

.. note::
    ログイン情報はブラウザのCookieに保存されます。
    ログイン情報Cookieの有効期限は2週間となっており、有効期限を過ぎた場合は再度ログイン処理を行っていただく必要があります。

.. note::

    :ref:`settings_system_config` の最大ログイン試行回数が設定されている場合、ログインに一定回数以上失敗するとアカウントがロックされ、以降は同じ IP アドレスから、対象のユーザにログインすることができなくなります。
    アカウントロック期間が設定されている場合、最後にログイン失敗した時点から、その期間が経過するとアカウントロックは自動的に解除され、再びログインできるようになります。
    root など管理者権限を持つユーザは、ロックされたユーザの詳細画面から手動でロックを解除することも可能です。
    一般ユーザでもロックされていない別 IP アドレスからログインして、自分のユーザ詳細画面からロックを解除することもできます。


^^^^^^^^^^^^^^^^^^^^^^^^
メニュー操作
^^^^^^^^^^^^^^^^^^^^^^^^

ログインした状態では画面上部のメニューから、ホーム、ファイルシステム、タスク一覧、インシデント一覧、:ref:`processes` 、:ref:`scheduler` 、:ref:`settings` 、ヘルプに移動することができます。

メニュー左端に表示されているロゴ画像および "Kompira" 表記部分はホームへのリンクになっていて、ユーザごとにホームとして設定されているオブジェクト（通常はディレクトリ）のページに移動します。

メニュー「ファイルシステム」はいくつかの代表的なディレクトリとその子オブジェクトへのショートカットになっています。

^^^^^^^^^^^^^^^^^^^^^^^^
キーボード操作
^^^^^^^^^^^^^^^^^^^^^^^^

Kompira では表示しているページごとに対応する機能の一部について、キーボードで操作することもできます。
共通的なキー操作を以下に示します。

.. tabularcolumns:: |\Y{0.2}|\Y{0.3}|\Y{0.5}|
.. table::
    :class: longtable

    +----------------+--------------------------+------------------------------------------------------------+
    | キーバインド   | 操作                     | 備考                                                       |
    +================+==========================+============================================================+
    | ``?``          | ヘルプ表示               | キーボードショートカットの一覧をダイアログで表示           |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``/``          | 検索ボックスにフォーカス | 検索ボックスがある場合                                     |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``~``          | ホームに移動             |                                                            |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``^``          | 親ディレクトリに移動     |                                                            |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``Ctrl-Left``  | 前のページに移動         | 複数ページ表示があるオブジェクトの場合                     |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``Ctrl-Right`` | 次のページに移動         | 複数ページ表示があるオブジェクトの場合                     |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``Alt-E``      | オブジェクトの編集       | オブジェクトの詳細画面でそのオブジェクトが編集が可能な場合 |
    +----------------+--------------------------+------------------------------------------------------------+
    | ``Alt-S``      | オブジェクトの保存       | オブジェクトの編集画面の場合                               |
    +----------------+--------------------------+------------------------------------------------------------+

.. note::
    ``Alt-E`` など一部のキーバインドは OS やブラウザによっては ``Alt-Shift-E`` など実際のキー操作が異なる場合があります。

.. versionadded:: 1.6.6
    キーボード操作の説明を追加しました。

.. _file_system:

------------------------
Kompiraファイルシステム
------------------------

ジョブフロー定義やノード情報など、Kompiraで扱う情報定義はKompiraオブジェクトとして、
Kompiraファイルシステム上で一元的に管理されます。

以下では、Kompiraオブジェクトの種類によらない設定、値について説明します。

^^^^^^^^^^^^^^^^^^^^^^^^
オブジェクトの名称
^^^^^^^^^^^^^^^^^^^^^^^^

Kompiraオブジェクトの名称は、以下の規則内で自由に命名することができます。

- アルファベット、数字、アンダーバー("_")、日本語を使うことができる
- 先頭の文字は数字以外でなければいけない
- アルファベットの大文字と小文字は区別される
- オブジェクトの名称の長さは128文字以内でなければいけない
- 絶対パスの長さは1024文字以内でなければいけない

.. _file_system_property:

^^^^^^^^^^^^^^^^^^^^^^^^^
オブジェクトのプロパティ
^^^^^^^^^^^^^^^^^^^^^^^^^

全てのKompiraオブジェクトにはプロパティが存在しており、オブジェクトの所有者もしくはルート権限を持つユーザーはプロパティの各項目を編集することができます。

プロパティで設定できる項目の一覧を以下に示します。

+------------------------+-----------------------------------------+
| フィールド             | 説明                                    |
+========================+=========================================+
| 表示名                 | オブジェクトの表示に使用する名称。      |
|                        | (オブジェクトの名称とは異なる)          |
+------------------------+-----------------------------------------+
| 説明                   | オブジェクトについての説明。            |
+------------------------+-----------------------------------------+
| 所有者                 | オブジェクトの所有者。                  |
+------------------------+-----------------------------------------+
| ユーザーパーミッション | ユーザーに与えるアクセス許可リスト。    |
+------------------------+-----------------------------------------+
| グループパーミッション | グループに与えるアクセス許可リスト。    |
+------------------------+-----------------------------------------+

ユーザーパーミッション、グループパーミッションの項ではユーザー、グループごとにアクセス許可を設定することができます。

全てのユーザーに対して共通のアクセス許可を設定したい場合、全てのユーザーが所属するotherグループを利用するとよいでしょう。

プロパティの設定対象がディレクトリかテーブルの場合、プロパティ編集画面に、「変更を子孫オブジェクトにも適用する」チェックボックスが、
所有者、および、ユーザーパーミッション、グループパーミッションの各項目にそれぞれ表示されます。
ここにチェックを入れて保存することで、対応するプロパティ設定の変更内容が子孫オブジェクトにも反映されます。

.. note::
    プロパティを編集できるのはアクセス許可の設定に関わらず、常にオブジェクトの所有者もしくはルート権限を持つユーザーのみです。
    書き込み権限を持つユーザーはオブジェクトの内容を編集することはできますが、プロパティは編集できないことに注意してください。

.. note::
    多数の子孫オブジェクトが含まれるディレクトリで、プロパティの変更を子孫オブジェクトにも適用する場合、
    完了するまでに長い時間がかかることがありますのでご注意ください。

.. _file_system_permission:

^^^^^^^^^^^^^^^^^^^^^^^^^^^^
オブジェクトのアクセス許可
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

全てのKompiraオブジェクトにはアクセス許可の設定が存在しています。

以下にKompiraオブジェクトが持つアクセス許可種別の一覧を示します。

.. tabularcolumns:: |\Y{0.15}|\Y{0.85}|
.. table::
    :class: longtable

    +----------+--------------------------------------------------------------------------------------------------------------------------+
    | 許可種別 | 説明                                                                                                                     |
    +==========+==========================================================================================================================+
    | 読み取り | オブジェクトの内容を読み取ることができます。                                                                             |
    |          | 権限がないオブジェクトのパスに移動しようとするとエラーとなります。                                                       |
    +----------+--------------------------------------------------------------------------------------------------------------------------+
    | 書き込み | オブジェクトの内容を編集することができます。                                                                             |
    |          | ディレクトリまたはテーブルオブジェクトにおいて書き込み許可を持たない場合、新規にオブジェクトを追加することはできません。 |
    +----------+--------------------------------------------------------------------------------------------------------------------------+
    | 実行     | オブジェクトを実行することができます。                                                                                   |
    |          | 実行可能なオブジェクト(ジョブフロー、スクリプトジョブ)でのみ有効な権限種別です。                                         |
    +----------+--------------------------------------------------------------------------------------------------------------------------+

ルート権限を持つユーザーには、明示的に指定されていない場合でも全てのアクセスが許可されています。

オブジェクトのアクセス許可設定は :ref:`file_system_property` から編集することができます。

.. note::
    ディレクトリまたはテーブルオブジェクトにオブジェクトを追加する場合、
    アクセス許可の設定は継承されません。

.. _kompira_object:

------------------------
Kompiraオブジェクト
------------------------

Kompiraファイルシステム上で作成されるオブジェクトには、ジョブフローやノード情報など様々な種類のものがあります。
これらは、やはりKompiraファイルシステム上のオブジェクトである型オブジェクトによって規定されています。
あらかじめ用意されている型オブジェクトは、/system/typesで一覧を参照することができます。

現バージョンでは、標準で以下に示す型オブジェクトが定義されています。

.. tabularcolumns:: |\Y{0.3}|\Y{0.7}|
.. table::
    :class: longtable
    :widths: auto

    +----------------------------+-------------------------------------------------------------------------------------+
    | 型名                       | 説明                                                                                |
    +============================+=====================================================================================+
    | TypeObject                 | 型オブジェクトを既定するためのオブジェクトです。                                    |
    | (型オブジェクト)           | 型オブジェクトを作成すると、作成した型のオブジェクトを作成できるようになります。    |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Directory                  | 複数のオブジェクトを格納することができるオブジェクトです。                          |
    | (ディレクトリ)             |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | License                    | ライセンスファイルを登録するためのオブジェクトです。                                |
    | (ライセンス)               | システムで使用する特殊なオブジェクトであり、新規に作成することはありません。        |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Virtual                    | 仮想オブジェクトを既定するためのオブジェクトです。                                  |
    | (仮想オブジェクト)         | プロセス一覧(/process)、タスク一覧(/task)は仮想オブジェクトとして定義されています。 |
    |                            | 一般に使用することはありません。                                                    |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Jobflow                    | ジョブフローの記述と実行をすることができるオブジェクトです。                        |
    | (ジョブフロー)             |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Channel                    | メッセージを格納することができるキューを持つオブジェクトです。                      |
    | (チャネル)                 | メッセージの送受信に利用することができます。                                        |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Wiki                       | Creole形式のWikiページを作成をすることができるオブジェクトです。                    |
    | (Wikiページ)               |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | ScriptJob                  | スクリプトの記述と実行をすることができるオブジェクトです。                          |
    | (スクリプトジョブ)         |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Environment                | key-value形式の環境情報を格納することができるオブジェクトです。                     |
    | (環境変数)                 |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Template                   | タスクなどのメッセージで使用する                                                    |
    | (テンプレート)             | テンプレートテキストを格納することができるオブジェクトです。                        |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Table                      | 同じ型の複数のオブジェクトを格納することができるオブジェクトです。                  |
    | (テーブル)                 |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Realm                      | ジョブマネージャが管理する領域を既定するためのオブジェクトです。                    |
    | (管理領域)                 | 管理領域一覧オブジェクト以下で作成されることを前提としており、                      |
    |                            | 通常のディレクトリやテーブル以下に作成することはありません。                        |
    +----------------------------+-------------------------------------------------------------------------------------+
    | AttachedFile               | 任意のファイルを保存することができるオブジェクトです。                              |
    | (添付ファイル)             |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | NodeInfo                   | サーバのIPアドレスやSSHのポート番号など、                                           |
    | (ノード情報)               | ノードを特定するための情報を格納することができるオブジェクトです。                  |
    +----------------------------+-------------------------------------------------------------------------------------+
    | AccountInfo                | リモートログインに必要なアカウント情報を格納することができるオブジェクトです。      |
    | (アカウント情報)           |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Repository                 | バージョン管理システムと連携するための情報を定義するオブジェクトです。              |
    | (リポジトリ)               |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | MailChannel                | IMAPサーバからのメールを取り込むことができるチャネルです。                          |
    | (メールチャネル)           |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Form                       | ユーザ入力フォームを作成することができるオブジェクトです。                          |
    | (フォーム)                 |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Config                     | 設定フォームを作成することができるオブジェクトです。                                |
    | (設定)                     |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Library                    | ジョブフローから呼び出し可能な Python のライブラリを定義するオブジェクトです。      |
    | (ライブラリ)               |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | MailTemplate               | メール送信で使用する                                                                |
    | (メールテンプレート)       | テンプレートテキストを格納することができるオブジェクトです。                        |
    +----------------------------+-------------------------------------------------------------------------------------+
    | Text                       | プレインテキストや HTML テキストなどテキスト情報を保持するオブジェクトです。        |
    | (テキスト)                 |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | SystemInfo                 | Kompira のシステム情報を提供するオブジェクトです。                                  |
    | (システム情報型)           |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | NodeType                   | リモートジョブで利用できる接続相手の情報を定義するオブジェクトです。                |
    | (ノード種別)               |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | CustomStyle                | ブラウザで表示される画面の配色などを設定するオブジェクトです。                      |
    | (カスタムスタイル)         |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | OAuth2Provider             | OAuth2認証を行う場合のサービスプロバイダ情報を定義するオブジェクトです。            |
    | (OAuth2プロバイダ)         |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | SmtpServer                 | メール送信時に利用するSMTPサーバの情報を定義するオブジェクトです。                  |
    | (SMTPサーバ)               |                                                                                     |
    +----------------------------+-------------------------------------------------------------------------------------+
    | LdapServer                 | ログインユーザをLDAP連携する場合に利用するLDAPサーバの情報を定義するオブジェクト    |
    | (LDAPサーバ)               | です。                                                                              |
    +----------------------------+-------------------------------------------------------------------------------------+

各型オブジェクトはそれぞれのフィールドとその種別を定義しています。
どのようなフィールドが定義されているかは、:ref:`builtin_type_object` を参照してください。

以下では一部の代表的なKompiraオブジェクトをとりあげ、その使用方法を記述します。

.. _kompira_object_directory:

^^^^^^^^^^^^^^^^^^^^^^^
ディレクトリ
^^^^^^^^^^^^^^^^^^^^^^^

ディレクトリは、複数の異なる型のオブジェクトを格納できるKompiraオブジェクトです。
ディレクトリオブジェクトのページを開くと、そのディレクトリに格納されているオブジェクトの一覧が表示されます。

格納されているオブジェクトの個数が多い場合は複数のページにわたって表示されます。
オブジェクト一覧の右上に配置されたページネートボタンで、前後のページや先頭または最後のページに移動します。
ページネートボタンの左側のメニューから、ページあたりに表示するオブジェクトの個数（ページサイズ）を変更できます。

オブジェクト一覧のヘッダ行の列名が表示されている部分をクリックすることで、一覧表示のソート順を変更できます。
同じ列を再度クリックすると昇順と降順が切り替わります。

オブジェクトの一覧表示のソート順とページサイズについては、そのデフォルト値をディレクトリオブジェクトごとに設定することができます。
オブジェクト一覧の右上に配置されたメニューボタンから「このディレクトリを編集する」を選ぶとディレクトリの編集画面に移動するので、そこで設定を保存してください。

ディレクトリオブジェクトから、以下の操作を行うことができます。
これらの操作はオブジェクト一覧の左上に配置されたボタンおよび「その他」メニューから行なえます。
また、オブジェクト一覧の上でマウス右クリックすると表示されるコンテキストメニューから操作することもできます。

.. tabularcolumns:: |\Y{0.2}|\Y{0.8}|
.. table::
    :class: longtable
    :widths: auto

    +--------------+-----------------------------------------------------+
    | 操作         | 説明                                                |
    +==============+=====================================================+
    | 新規作成     | オブジェクトを作成します。                          |
    |              | 作成する際は型オブジェクトを指定する必要があります。|
    +--------------+-----------------------------------------------------+
    | 閲覧         | 格納しているオブジェクトのページに移動します。      |
    +--------------+-----------------------------------------------------+
    | 編集         | オブジェクトの内容を編集します。                    |
    +--------------+-----------------------------------------------------+
    | 名前の変更   | オブジェクトの名称を変更します。                    |
    |              | プロパティの表示名がオブジェクトの名称と等しい場合、|
    |              | 表示名も同時に変更されます。                        |
    +--------------+-----------------------------------------------------+
    | 移動         | オブジェクトを移動します。                          |
    +--------------+-----------------------------------------------------+
    | コピー       | オブジェクトを別のディレクトリにコピーします。      |
    +--------------+-----------------------------------------------------+
    | 削除         | オブジェクトを削除します。                          |
    +--------------+-----------------------------------------------------+
    | エクスポート | 選択したオブジェクトをエクスポートします。          |
    |              | オブジェクト未選択時は、ディレクトリ以下のすべての  |
    |              | オブジェクトをエクスポートします。                  |
    +--------------+-----------------------------------------------------+
    | インポート   | ファイルから選択したディレクトリにオブジェクトをイン|
    |              | ポートします。ディレクトリ未選択時は現在のディレクト|
    |              | 以下にオブジェクトをインポートします。              |
    +--------------+-----------------------------------------------------+
    | プロパティ   | オブジェクトのプロパティを編集します。              |
    +--------------+-----------------------------------------------------+
    | 検索         | ディレクトリ配下の子孫オブジェクトを検索します。    |
    +--------------+-----------------------------------------------------+

ディレクトリオブジェクトの詳細画面では共通のキー操作に加えて以下のキー操作に対応しています。

+----------------+------------------------------------+
| キーバインド   | 操作                               |
+================+====================================+
| ``n``          | オブジェクトの新規作成             |
+----------------+------------------------------------+
| ``#``          | 型オブジェクトの選択               |
+----------------+------------------------------------+
| ``j``          | 次のオブジェクト                   |
+----------------+------------------------------------+
| ``k``          | 前のオブジェクト                   |
+----------------+------------------------------------+
| ``Space``      | オブジェクトの選択切り替え         |
+----------------+------------------------------------+
| ``a``          | すべてのオブジェクトの選択切り替え |
+----------------+------------------------------------+
| ``Delete``     | オブジェクトの削除                 |
+----------------+------------------------------------+
| ``F2``         | 名前を変更                         |
+----------------+------------------------------------+
| ``c``          | オブジェクトのコピー               |
+----------------+------------------------------------+
| ``m``          | オブジェクトの移動                 |
+----------------+------------------------------------+
| ``p``          | プロパティの編集                   |
+----------------+------------------------------------+

.. versionadded:: 1.6.6
    キー操作の説明を追加しました。

オブジェクトの新規作成
**********************

ディレクトリ画面でオブジェクトを新規作成することができます。

* 最下行の「型」列で、新規作成したいオブジェクトの型を選択します。
* 最下行の「名称」列にある入力フォームに、新規作成したいオブジェクトの名称を入力します。
* 名称を入力したフォームの右側にある「＋」記号のボタンを押下すると、選択した型に応じた編集画面に移動します。
* 編集画面で必要な情報を入力して「保存」ボタンを押下すると、オブジェクトが作成されます。

なお、ディレクトリ型など一部の型では編集画面に移動することなくオブジェクトが新規作成されます。

オブジェクトの閲覧と編集
************************

ディレクトリ画面に一覧表示されているオブジェクトのリンクをクリックする、またはオブジェクトを1つ選択してエンターを押下するかメニューから「開く」を選ぶと、そのオブジェクトのページ（詳細画面）に移動します。

オブジェクトを1つ選択してメニューから「編集」を選ぶと、そのオブジェクトの編集画面に直接移動することもできます。

オブジェクトの名前変更
**********************

オブジェクトを1つ選択してメニューから「名前の変更」を選ぶと、そのオブジェクトの名称を変更することができます。
選択している行の「名称」列の上に入力フォームが現れて、オブジェクトの現在の名称が入力された状態で表示されます。
新しい名称を入力してエンターを押下することで名前が変更されます。または、ESC キーでキャンセルできます。

オブジェクトの移動とコピー
**************************

オブジェクトを1つ以上選択してメニューから「移動」または「コピー」を選ぶと、選択したオブジェクトを移動またはコピーすることができます。
移動先またはコピー先を選ぶダイアログが表示されるので、目的の場所を選択して「移動」または「コピー」ボタンを押下してください。

なお、オブジェクトを1つだけ選択している場合はダイアログの名称フォームが入力可能になり、移動またはコピー先での新しい名前を指定することもできます。

.. note:: 
    対象となるオブジェクトの個数が非常に多いコピー操作では、コピー処理に長時間かかる場合がありますのでご注意ください。

オブジェクトの削除
******************

オブジェクトを1つ以上選択してメニューから「削除」を選ぶと、選択したオブジェクトを削除することができます。
本当に削除するかを確認するダイアログが表示されるので、「削除」または「キャンセル」を選んでください。

オブジェクトのプロパティ編集
****************************

オブジェクトを1つ以上選択してメニューから「プロパティ」を選ぶと、選択したオブジェクトのプロパティを編集することができます。

オブジェクトを1つだけ選択している場合は、そのオブジェクトのプロパティ編集画面に移動します。
変更したいプロパティを編集してから「保存」ボタンを押下することで、そのオブジェクトのプロパティが更新されます。

2つ以上の複数オブジェクトを選択した状態でプロパティメニューを選択すると、プロパティ編集のダイアログが表示されます。
このダイアログでは、所有者とユーザーパーミッション、グループパーミッションを変更することができ、
「変更を適用する」をチェックした項目を選択したオブジェクトに対して一括で反映することができます。
なお、選択したオブジェクトにディレクトリやテーブルが含まれている場合、それらの子孫オブジェクトにはプロパティ変更は反映されません。

オブジェクトのインポート
************************

メニューから「インポート」を選ぶと、エクスポートされた JSON ファイルを Kompira にインポートすることができます。
ダイアログが表示されるのでインポートしたいファイルを選択したうえで「インポート」ボタンを押下するとインポート処理が開始されます。
このとき、インポートで既存オブジェクトを上書きするかどうかを指定することもできます。

なお、ディレクトリ画面で1つもオブジェクトを選択していないときはそのディレクトリにインポートされます。
ディレクトリまたはテーブルを1つ選択していたときは、選択したディレクトリまたはテーブルの中にインポートされます。

インポートできないオブジェクトを選択しているときや、2つ以上のオブジェクトを選択しているときはインポートできません。

オブジェクトのインポートは、当該ディレクトリの所有者、もしくはルート権限を持つユーザのみ可能です。

.. note:: 
    インポートする JSON ファイルが巨大な場合や、含まれるオブジェクトの個数が非常に多い場合などでは、インポート処理に長時間かかったりメモリを多く必要とする場合がありますのでご注意ください。

オブジェクトのエクスポート
**************************

メニューから「エクスポート」を選ぶと、Kompira オブジェクトのデータを JSON ファイルとしてエクスポートすることができます。
表示されたダイアログで「エクスポート」ボタンを押下するとエクスポート処理が開始されます。
エクスポートファイルの準備が完了すると、ファイルの保存先を確認するシステムダイアログが表示されるので、保存したい場所を指定してください。
このとき、エクスポート対象に仮想オブジェクトを含めるかを指定することもできます。プロセス情報やユーザ・グループなど仮想オブジェクトを含めたい場合はチェックしてください。

オブジェクトのエクスポートは、当該ディレクトリの所有者、もしくはルート権限を持つユーザのみ可能です。

.. note:: 
    エクスポート対象となるオブジェクトの個数が非常に多い場合や、含まれるフィールドデータのサイズが巨大な場合などでは、エクスポート処理に長時間かかったりメモリを多く必要とする場合がありますのでご注意ください。

オブジェクトの検索
******************

ディレクトリ一覧画面の右上の検索ボックスに検索キーを入力して検索ボタンをクリックすると、検索結果の一覧画面に遷移します。

検索キーの先頭に ``#`` を付けると、型の表示名で検索します。たとえば、検索キーに ``#ジョブフロー`` を指定すると、ジョブフロー型のオブジェクトを検索します。
同様に ``@`` を付けると、所有者で検索します。たとえば、検索キーに ``@guest`` を指定すると、 ``guest`` ユーザが所有するオブジェクトを検索します。
先頭文字が ``#`` と ``@`` 以外の検索キーの場合は、指定された文字列が表示名に含まれるオブジェクトを検索します。
``#`` や ``@`` で始まる表示名を検索したい場合には、 ``\#`` や ``\@`` のようにバックスラッシュを付けて検索します。

複数の種類の検索キーを同時に指定した場合は、AND条件による検索となります。
複数の検索キーは、基本的に空白によって区切られますが、連続する表示名の場合は、空白を含む1つの表示名として扱われます。
例えば、 ``some display name @root #ディレクトリ`` と入力した場合、 ``some display name`` という文字列を含む表示名で、かつ、
所有者が ``root`` ユーザ、型がディレクトリであるようなオブジェクトを検索します。

同じ種類の検索キーを複数指定した場合は、最後の検索キーが有効になります。


.. _kompira_object_table:

^^^^^^^^^^^^^^^^^^^^^^^
テーブル
^^^^^^^^^^^^^^^^^^^^^^^

テーブルはディレクトリと同様に複数のオブジェクトを格納できるKompiraオブジェクトです。
ただし、格納できるオブジェクトの型が1つに限定されている点がディレクトリとは異なります。

テーブルオブジェクトを作成する場合、初めに型オブジェクトと、その型オブジェクト内のフィールドを選択します。
作成されたテーブルオブジェクトでは、ディレクトリオブジェクトで表示される情報に加えて作成時に選択したフィールド情報が表示されます。

テーブルオブジェクトを使用することで、格納されているオブジェクトのフィールドを一括で閲覧することができます。

テーブルオブジェクトの詳細画面ではディレクトリオブジェクトと同様のキー操作に対応しています。ただし ``#`` による型オブジェクトの選択は使えません。

オブジェクトの検索
******************

テーブルオブジェクトの詳細画面ではテーブルに含まれるオブジェクトを検索することができます。
このとき検索対象として、オブジェクトが持つプロパティまたはフィールドから1つを選択する必要があります。

検索対象のプロパティとしては、 ``abspath``, ``display_name``, ``owner`` から選択することができます。

検索対象のフィールドとしては、テーブルに関連付けられた型オブジェクトで定義されたフィールドから選択することが出来ます。
ただし、次に該当するフィールドについては検索対象として選択することが出来ません。

- 以下いずれかの型のフィールド
    - ``Password``, ``Array<Password>``, ``Dictionary<Password>``
- フィールド修飾子で非表示 (``invisible=true``) と設定されたフィールド

検索ボックスに入力した値 (検索値) からどのようにオブジェクトを絞り込むかは、選択した検索対象によって検索の処理が異なります。
検索対象としてプロパティを選択した場合は、以下のように検索されます。

- abspath (名称)
    - パスに検索値が含まれるオブジェクトが検索されます。
- display_name (表示名)
    - 表示名に検索値が含まれるオブジェクトが検索されます。
- owner (所有者)
    - 所有者の名称が検索値と一致するオブジェクトが検索されます。

検索対象としてフィールドを選択した場合は、オブジェクトが持つフィールド値が検索条件に該当するときに、そのオブジェクトが検索されることになります。
このとき、選択した :ref:`フィールドの型 <fields-types>` ごとに、検索値の入力形式と検索条件は以下のようになります。

- String, Enum, Text, LargeText, IPAddress, EMail, URL
    - 入力形式: 任意の文字列
    - 検索条件: フィールド値の一部に検索値が含まれる
- Binary
    - 入力形式: 16進表記
    - 検索条件: フィールド値の一部に検索値が含まれる
- Integer
    - 入力形式: 整数値
    - 検索条件: フィールド値が検索値と一致する
- Float
    - 入力形式: 浮動小数点
    - 検索条件: フィールド値が検索値と一致する
- Boolean
    - 入力形式:
        - True: ``True``, ``true``, ``1``
        - False: ``False``, ``false``, ``0``
    - 検索条件: フィールド値の ``True``, ``False`` と検索値 (True, False) が一致する
- Object
    - 入力形式: オブジェクトパス
    - 検索条件: フィールド値（オブジェクト）のパスと検索値が一致する
- Datetime
    - 入力形式(1): 以下のような :ref:`datetime() <library_functions>` 関数で解析できる日時形式
        - ``YYYY-mm-dd HH:MM:SS``
        - ``YYYY-mm-dd HH:MM:SS.mmmmmm``
    - 検索条件(1)
        - [秒単位で指定した場合] フィールド値が検索値からの1秒間の範囲 (``YYYY-mm-dd HH:MM:SS.000000 .. YYYY-mm-dd HH:MM:SS.999999``) に含まれる
        - [マイクロ秒単位で指定した場合] フィールド値が検索値と一致する
    - 入力形式(2): ``YYYY-mm-dd`` のような :ref:`date() <library_functions>` 関数で解析できる日時形式
    - 検索条件(2): フィールド値の日付部分が検索値と一致する
    - 入力形式(3): 以下のような :ref:`time() <library_functions>` 関数で解析できる日時形式
        - ``HH:MM:SS``
        - ``HH:MM:SS.mmmmmm``
    - 検索条件(3)
        - [秒単位で指定した場合] フィールド値の時刻部分が検索値からの1秒間の範囲 (``HH:MM:SS.000000 .. HH:MM:SS.999999``) に含まれる
        - [マイクロ秒単位で指定した場合] フィールド値の時刻部分が検索値と一致する
- Date
    - 入力形式: ``YYYY-mm-dd`` のような :ref:`date() <library_functions>` 関数で解析できる日時形式
    - 検索条件: フィールド値が検索値と一致する
- Time
    - 入力形式: 以下のような :ref:`time() <library_functions>` 関数で解析できる日時形式
        - ``HH:MM:SS``
        - ``HH:MM:SS.mmmmmm``
    - 検索条件
        - [秒単位で指定した場合] フィールド値が検索値からの1秒間の範囲 (``HH:MM:SS.000000 .. HH:MM:SS.999999``) に含まれる
        - [マイクロ秒単位で指定した場合] フィールド値が検索値と一致する
- File
    - 入力形式: ファイル名
    - 検索条件: フィールド値（ファイル）のファイル名が検索値と一致する
- Array<T>
    - :ref:`型 T <fields-types>` に応じた検索処理になります。
    - 配列データに検索条件を満たす要素が1つでもあれば、そのオブジェクトが検索されます。
- Dictionary<T>
    - :ref:`型 T <fields-types>` に応じた検索処理になります。辞書データのうち、キーは検索対象外であり、値が検索対象となります。
    - 辞書データに検索条件を満たす要素が1つでもあれば、そのオブジェクトが検索されます。

.. versionadded:: 1.6.9
    Float, Datetime, Date, Time フィールドでの検索に対応しました。
.. versionadded:: 1.6.9.post1
    Binary, Boolean, Integer, Object フィールドでの検索に対応しました。
    

.. _kompira_object_jobflow:

^^^^^^^^^^^^^^^^^^^^^^^
ジョブフロー
^^^^^^^^^^^^^^^^^^^^^^^

ジョブフローオブジェクトから、ジョブフローの記述と実行ができます。
ジョブフローの記述方法については、:doc:`tutorial` を参照してください。
また、ジョブフロー言語の詳細については、:doc:`reference` が参考になります。

ジョブフローオブジェクトの詳細画面では共通のキー操作に加えて以下のキー操作に対応しています。

+--------------+--------------------+
| キーバインド | 操作               |
+==============+====================+
| ``Alt-X``    | ジョブフローの実行 |
+--------------+--------------------+

.. _kompira_object_jobflow_execution:

ジョブフローの実行
******************

ジョブフローを記述し、保存すると、ジョブフローの実行ボタンが有効になります。
実行ボタンを押すと、ジョブフローの実行を開始し、プロセス詳細画面に移ります。

.. note::
    記述したジョブフローに文法エラーがある場合や、Kompiraエンジンが
    停止している場合は、ジョブフローの実行ボタンが無効になります。

.. _kompira_object_jobflow_parameter:

パラメータの指定
****************

ジョブフローにパラメータが定義されている場合は、実行するときに各パラメータの値を画面上で入力して指定することができます。
デフォルト値が定義されているパラメータは、ジョブフローの画面を表示した時点で入力欄にそのデフォルト値が入力された状態になっています。
デフォルト値が定義されていないパラメータの入力欄は空になっていますが、空のパラメータがあるとジョブフローを実行することは出来ないため、全てのパラメータを入力してから実行するようにしてください。

パラメータの入力欄にはジョブフローの記法での値または式を記述することができます。
これは例えば、パラメータに文字列を与えたい場合は引用符で囲む必要があることになります。

ジョブフローの画面を表示するとき、URL パラメータに「パラメータ名=式」という形式でジョブフローのパラメータを指定することもできます。
たとえば /root/test_jobflow というジョブフローに foo と bar というパラメータが定義されていて、数値と文字列を指定したいとすると以下のような URL になります。

.. code::

    https://<kompira-server>/root/test_jobflow?foo=100&bar="hello"

パラメータ部分は URL エンコードする必要があり、利用する文字によっては %XX （XXは文字コードの16進数）と記述することに注意してください。
たとえば、foo に 50+50 という式を、bar には "#hashtag" という記号を含む文字列を与えたいとすると、以下のような URL にしなければいけません。

.. code::

    https://<kompira-server>/root/test_jobflow?foo=50%2b50&bar="%23hashtag"

オプションの指定
****************

ジョブフロー実行には以下のオプションが選択できます。

.. tabularcolumns:: |\Y{0.3}|\Y{0.7}|
.. table::
    :class: longtable
    :widths: auto

    ======================= ===============================================================
    オプション名             内容
    ======================= ===============================================================
    ステップモード          ジョブフローをデバッグする際に使用するモードです。
                            コマンドの実行前にジョブフローが一時停止し、実行コマンドの
                            内容を確認できます。
    チェックポイントモード  ジョブフローの実行状態を随時保存するモードです。
                            ジョブフロー実行中に万が一Kompiraサーバが異常終了した場合、
                            保存されたチェックポイントの状態から、ジョブフロープロセスを
                            再開できるようになります。
    監視モード              ジョブフローの実行監視モードを指定します。
                            ジョブフローの完了時や異常終了時に、ジョブフローを実行した
                            ユーザのメールアドレス宛にメールを送信して通知します。
    ======================= ===============================================================


.. _kompira_object_scriptjob:

^^^^^^^^^^^^^^^^^^^^^^^
スクリプトジョブ
^^^^^^^^^^^^^^^^^^^^^^^

スクリプトジョブを作成すると Bash や Perl、Ruby、Python などの言語で記述された
スクリプトをリモートのサーバ上で実行することができます。

スクリプトジョブオブジェクトの詳細画面では共通のキー操作に加えて以下のキー操作に対応しています。

+--------------+------------------------+
| キーバインド | 操作                   |
+==============+========================+
| ``Alt-X``    | スクリプトジョブの実行 |
+--------------+------------------------+

スクリプトの編集
****************

編集ボタンを押すと、スクリプトの編集画面に移ります。
ソースのテキストエリアに、実行させるスクリプトを記述してください。

Linuxなど、Unix系 OS でスクリプトを実行させる場合、スクリプトの先頭行に
シバン(shebang)を記述してください。

例

.. code::

    #!/bin/bash
    echo hello

Windows系 OS でスクリプトを実行させる場合、拡張子を指定する必要があります。
スクリプトの種類に応じて、以下の拡張子を指定してください。

==================== ======
スクリプト           拡張子
==================== ======
バッチファイル       bat
VBScript             vbs
JScript              js
PowerShellスクリプト ps1
==================== ======

スクリプトの実行方法
********************

実行ボタンを押すと、スクリプトの実行が開始され、プロセス詳細画面に移り
ます。スクリプトの実行が完了すると、終了ステータス、標準出力、標準エラー
出力の結果が、コンソールに表示されます。

実行ボタンの右側にあるテキストフィールドにて、コマンドライン引数を入力
することができます。空白で区切ることで複数のコマンドライン引数を渡せま
す。

実行ノードは、スクリプトが実行されるリモートのサーバを指定します。指定
しなかった場合は、ジョブマネージャが動作しているローカルサーバ上でスク
リプトが実行されます。

実行アカウントは、リモートサーバにログインする場合のアカウント情報を指
定します。

.. versionadded:: 1.4.0
    スクリプトジョブをブラウザ上から直接実行できる機能を追加


.. _kompira_object_mail_channel:

^^^^^^^^^^^^^^^^^^^^^^^
メールチャネル
^^^^^^^^^^^^^^^^^^^^^^^

メールチャネルは、外部の IMAP4/POP3 サーバと連携して、ジョブフローからメールを受信するためのオブジェクトです。
以下のように、作成したメールチャネルオブジェクトに対して、ジョブフローのメッセージ受信機能を用いることで、メールを受信して処理することが可能になります。
(以下の例では /home/guest/test_mchan に作成したメールチャネルからの受信を想定しています)

.. ifconfig:: language == 'ja'

    .. code::

       </home/guest/test_mchan> ->
       [mail = mail_parse($RESULT)] ->
       print('メール受信しました:', mail['Subject'])

.. ifconfig:: language != 'ja'

    .. code::

       </home/guest/test_mchan> ->
       [mail = mail_parse($RESULT)] ->
       print('Received mail:', mail['Subject'])

メールチャネル設定方法
**********************

メールチャネルオブジェクトの編集画面で、以下の各項目を設定し、保存してください。

.. tabularcolumns:: |\Y{0.25}|\Y{0.75}|
.. table::
    :class: longtable
    :widths: auto

    ======================== ==========================================================================================
    設定項目                 内容
    ======================== ==========================================================================================
    サーバ名                 接続する IMAP4/POP3 サーバのホスト名かIPアドレスを設定します。
    プロトコル               メール受信のプロトコルとして、IMAP4 もしくは POP3 のいずれかを設定します。
    SSL                      SSL による通信を行う場合はチェックします。
    ポート番号               IMAP サーバのポート番号を設定します。指定しない場合デフォルトのポート番号が使用されます。
    メールボックス           受信するメールボックスを設定します。デフォルトは "INBOX" です。
    ユーザ名                 IMAP4/POP3 サーバに接続するユーザー名を設定します。
    パスワード               IMAP4/POP3 サーバに接続する際のパスワードを設定します。
    受信チェック間隔         IMAP4/POP3 サーバに対して新着メッセージを確認する間隔を分単位で指定します。
    接続タイムアウト         IMAP4/POP3 サーバに対する接続タイムアウトを秒単位で指定します。
    OAuth2使用               OAuth2 を用いて認証する場合はチェックします。この場合、パスワードの設定は不要となります。
    OAuth2プロバイダ         OAuth2 のサービスプロバイダを選択します。OAuth2 認証を利用する場合には必須です。
    無効                     IMAP4/POP3 サーバへの接続を無効化します。
    ログサイズ               ログの最大サイズを指定します。最大サイズを超えた場合、古いログメッセージから削除されます。
    ======================== ==========================================================================================

接続テスト
**********

サーバ名の右側に配置された「接続テスト」ボタンをクリックすると、設定さ
れた IMAP4/POP3 サーバに対して接続、ユーザ名とパスワードによる認証、お
よび、メールボックスの確認を行います。

.. _kompira_object_mail_channel_oauth2:

OAuth2認証を利用する場合の設定手順
**********************************

OAuth2認証を利用しての接続を行う場合、ユーザ名を設定し、接続先のメールサービスに対応しているOAuth2プロバイダを選択し、OAuth2使用をチェックします。

その後、OAuth2使用の右横に表示されている「承認フロー開始」ボタンをクリックして、承認フローを開始します。
OAuth2プロバイダの認証画面が別ウィンドウで表示されるので、設定したユーザ名でログインした後、内容を確認して承認ボタンをクリックします。
リダイレクトに失敗して、ウィンドウ上に「このサイトにアクセスできません」と表示された場合には、ウィンドウのアドレスバー部分に表示されているURLをコピーし、
もとのKompiraの画面に表示されているリダイレクトURL入力のダイアログボックスにペーストしてから「提出」ボタンをクリックします。
Kompiraは入力されたリダイレクトURLに含まれる認可コードを用いて、アクセストークンを取得します。

トークンの取得に成功すると、メールチャネルの画面上に新たにトークン有効期限が表示されます。

プロバイダの設定を変更した場合などは、「トークン消去」ボタンをクリックして、Kompira内部に保存されたトークンを消去した後で、
再度、「承認フロー開始」を行ってトークンを再取得してください。

.. note::

   リフレッシュトークン付きの場合、期限切れのアクセストークンはメール送受信や接続テストの実行時に自動的にリフレッシュされて有効期限が延長されます。
   リフレッシュトークンは一般的にアクセストークンよりも長い有効期限が設定されていますが、リフレッシュトークンの期限が切れた場合は、トークンのリフレッシュに失敗します。
   その場合、「承認フロー開始」を行って、再度トークンを取得してください。
   リフレッシュ時には、リフレッシュトークンも更新されるため、定期的にメール送受信や接続テストを行うことで、リフレッシュトークンの有効期限切れを防ぐことが可能です。

.. note::

   ユーザーは、KompiraアプリケーションをOAuth2プロバイダに登録し、そこでの設定情報をもとにOAuth2プロバイダ型オブジェクトを定義しておく必要があります。
   アプリケーションの登録方法については、各OAuth2プロバイダの技術ドキュメントを参照してください。

.. _kompira_object_smtp_server:

^^^^^^^^^^^^^^^^^^^^^^^
SMTPサーバ
^^^^^^^^^^^^^^^^^^^^^^^

SMTPサーバは、メール送信時に利用するSMTPサーバの情報を定義するオブジェクトです。

SMTPサーバ設定方法
******************

SMTPサーバオブジェクトの編集画面で、以下の各項目を設定し、保存してください。

.. tabularcolumns:: |\Y{0.25}|\Y{0.75}|
.. table::
    :class: longtable
    :widths: auto

    ======================== ==========================================================================================
    設定項目                 内容
    ======================== ==========================================================================================
    ホスト名                 接続する SMTP サーバのホスト名かIPアドレスを設定します。
    ポート番号               SMTP サーバのポート番号を設定します。指定しない場合デフォルトのポート番号が使用されます。
    ユーザ名                 認証が必要な SMTP サーバに接続する場合のユーザー名を設定します。
    パスワード               認証が必要な SMTP サーバに接続する場合のパスワードを設定します。
    接続タイムアウト         SMTP サーバに対する接続タイムアウトを秒単位で指定します。
    TLS使用                  TLS を用いて SMTP サーバに接続する場合にチェックします。
    SSL使用                  SSL を用いて SMTP サーバに接続する場合にチェックします。
    OAuth2使用               OAuth2 を用いて認証する場合はチェックします。この場合、パスワードの設定は不要となります。
    OAuth2プロバイダ         OAuth2 のサービスプロバイダを選択します。OAuth2 認証を利用する場合には必須です。
    ======================== ==========================================================================================

「接続テスト」ボタンをクリックすると、SMTP サーバに対する接続確認を行います。
また、ユーザー名とパスワードが設定されている場合は、ユーザー認証の確認も行います。

OAuth2認証の設定手順については、メールチャネルと同様です。(:ref:`kompira_object_mail_channel_oauth2`)

^^^^^^^^^^^^^^^^^^^^^^^
LDAPサーバ
^^^^^^^^^^^^^^^^^^^^^^^

LDAPサーバは、Kompira のログインアカウントをLDAPと連携するためのLDAPサーバと設定情報を定義するオブジェクトです。
システム設定の LDAPサーバ (ldapServer) フィールドに、連携するLDAPサーバオブジェクトを指定します。


LDAPサーバ設定方法
******************

LDAPサーバオブジェクトの編集画面で、以下の各項目を設定し、保存してください。

.. tabularcolumns:: |\Y{0.25}|\Y{0.75}|
.. table::
    :class: longtable
    :widths: auto

    ======================== ===================================================================================================
    設定項目                 内容
    ======================== ===================================================================================================
    サーバURL                LDAPサーバのURLを指定します。(例: ldap://ldap.example.com)
    接続タイムアウト         LDAPサーバの接続タイムアウトを指定します。
    STARTTLS使用             LDAP サーバへの接続に STARTTLS を用いる場合にセットします。
    フォールバックログイン   LDAPログイン失敗時に、直近にログインした際のパスワードによるログインを許可する場合にセットします。
    セッション有効期間       LDAPユーザでログインしたときのセッションの有効期間を時間単位で指定します。
    バインドDN               LDAP サーバへのバインド DN を指定します。空にした場合、匿名バインドを用います。
    バインドパスワード       LDAP サーバへのバインド時のパスワードを指定します。
    ユーザー検索DN           ユーザ検索の基点となる DN を指定します。
    ユーザー検索スコープ     ユーザ検索の基点からのスコープを BASE, ONELEVEL, SUBTREE の中から指定します。
    ユーザー検索属性         ユーザ検索の対象となるオブジェクトの属性中からユーザ名が格納されているものを指定します。
    対象ユーザ               LDAP連携するユーザ名のリストを指定します。
    所属グループDN           LDAP連携するユーザが所属するグループのDNを指定します。
    グループ検索DN           グループ検索の基点となる DN を指定します。
    グループ検索スコープ     グループ検索の基点からの検索対象のスコープを BASE, ONELEVEL, SUBTREE の中から指定します。
    グループ検索クラス       グループ検索の対象となるオブジェクト中からフィルタするクラス (objectClass) を指定します。
    グループ種別             グループ検索の対象となるグループの種類を指定します。
    反映グループ             LDAPユーザが所属するLDAPのグループをKompiraのグループに反映させるグループ名を指定します。
    ユーザデータ(名)         ユーザオブジェクトの「名」にLDAPの値を反映させる場合に、対応するLDAPユーザの属性を指定します。
    ユーザデータ(姓)         ユーザオブジェクトの「姓」にLDAPの値を反映させる場合に、対応するLDAPユーザの属性を指定します。
    ユーザデータ(Email)      ユーザオブジェクトの「Eメール」にLDAPの値を反映させる場合に、対応するLDAPユーザの属性を指定します。
    ======================== ===================================================================================================

「接続テスト」ボタンをクリックすると、LDAP サーバに対する接続確認を行います。

.. note::
    LDAPユーザでの初回ログインに成功すると、Kompiraのユーザー一覧 (/config/user) にLDAPユーザが新規に作成されます。
    作成されたLDAPユーザはLDAPサーバ上から削除されてもKompiraのユーザー一覧上には残されるので、必要に応じて削除してください。

.. note::
    セッション有効期間の設定は、LDAPでログインしたユーザにのみに影響します。
    ローカルユーザでログインした場合は、常にシステムのデフォルトのセッション有効期間 (2週間=336時間) が適用されます。
    また、セッション有効期間を 0 に設定した場合、ブラウザを閉じたときにセッションが破棄されるようになります。
    空に設定した場合は、デフォルトのセッション有効期間が適用されます。

.. note::
    グループ検索DNや、ユーザデータ（名、姓、Email）が指定されている場合、LDAPユーザでログインする度に、ユーザオブジェクトの
    対応フィールド（groups, first_name, last_name, email）が、LDAPサーバの最新の値に上書きされます。
    これらのフィールドの値を別途書き換えても、ログインする度にLDAPサーバの値で上書きされることに注意してください。
    ただし、ユーザーオブジェクトのグループフィールドに非LDAPグループを設定している場合、その値は保存されます。

.. _kompira_object_form:

^^^^^^^^^^^^^^^^^^^^^^^
フォーム
^^^^^^^^^^^^^^^^^^^^^^^

フォームは、ユーザ入力フォームを作成することができるオブジェクトです。
フォームは提出オブジェクトとして設定したオブジェクトの型によって、実行できる機能が異なります。

- 提出オブジェクトとしてチャネル型オブジェクトが設定されている場合は、そのチャネルにフォームで入力したメッセージを送信することができます。
- 提出オブジェクトとしてジョブフロー型オブジェクトが設定されている場合は、そのジョブフローをフォームで入力したパラメータで実行することができます。

フォームオブジェクトの詳細画面では共通のキー操作に加えて以下のキー操作に対応しています。

+--------------+----------+----------------------------------------+
| キーバインド | 操作     | 備考                                   |
+==============+==========+========================================+
| ``Alt-S``    | 送信     | 提出オブジェクトがチャネル型の場合     |
|              +----------+----------------------------------------+
|              | 実行     | 提出オブジェクトがジョブフロー型の場合 |
+--------------+----------+----------------------------------------+

フォーム設定方法
*****************

フォームオブジェクトの編集画面で、以下の各項目を設定し、保存してください。

.. tabularcolumns:: |\Y{0.25}|\Y{0.75}|
.. table::
    :class: longtable

    ======================== ==========================================================================================
    設定項目                 内容
    ======================== ==========================================================================================
    提出オブジェクト         このフォームから提出先となるチャネル型またはジョブフロー型のオブジェクトを設定します。
    型フィールド             提出オブジェクトに提出するデータの構造を設定します。
    ======================== ==========================================================================================

提出データの入力
****************

フォームオブジェクトの詳細画面では、提出オブジェクトに提出するデータの入力欄（フォーム）が表示されます。
各フィールドは定義したそのフィールド型に応じた入力インターフェースになっており、数値や文字列などの値を入力することができます。
:ref:`kompira_object_jobflow_parameter` で示したようにジョブフローのパラメータでは式を与えることが出来ましたが、フォームでは値だけが入力できて式は使えないことに注意してください。

フォームオブジェクトの画面を表示するときに、URL パラメータに「フィールド名=値」という形式で提出データを指定することもできます。
たとえば /root/test_form というフォームオブジェクトに foo という Integer 型フィールドと bar という String 型フィールドが定義されていて、数値と文字列を指定したいとすると以下のような URL になります。

.. code::

    https://<kompira-server>/root/test_form?foo=100&bar=hello

ジョブフローでの式を与えるパラメータ指定とは異なり型に応じた値を指定するため、文字列を引用符で囲む必要はありません。


メッセージ送信
**************
提出オブジェクトとしてチャネル型オブジェクトが設定されている場合は、入力フォームの下に送信ボタンが表示されます。

フォームに値を入力して送信ボタンを押すと、入力された値が辞書型データとして提出オブジェクトに設定されたチャネルオブジェクトに送信されます。

ジョブフロー実行
****************
提出オブジェクトとしてジョブフロー型オブジェクトが設定されている場合は、入力フォームの下に実行ボタンが表示されます。

フォームに値を入力して実行ボタンを押すと、入力された値をパラメータとして提出オブジェクトに設定されたジョブフローオブジェクトを実行します。


.. _kompira_object_repository:

^^^^^^^^^^^^^^^^^^^^^^^
リポジトリ
^^^^^^^^^^^^^^^^^^^^^^^

リポジトリオブジェクトを作成することで、Kompira のディレクトリと分散型バージョン管理システム (DVCS) 上のリポジトリを同期させることが可能です。
リモートリポジトリから指定した Kompira ディレクトリにオブジェクトを取り込んだり、逆に、作成した Kompira オブジェクトをリモートリポジトリ上に保存したりすることができます。
これによって、Kompira のジョブフローやスクリプトジョブなどのバージョン管理が可能になります。
また、複数の Kompira 間でのジョブフローの共有なども簡単に行えるようになります。

リポジトリ設定方法
******************

リポジトリオブジェクトの編集画面で、以下の各項目を設定し、保存してください。

.. tabularcolumns:: |\Y{0.27}|\Y{0.73}|
.. table::
    :class: longtable

    ====================== ====================================================================================================
    設定項目               内容
    ====================== ====================================================================================================
    URL                    リモートリポジトリの URL を指定します。
    リポジトリ種別         リモートリポジトリの種別を指定します。(現バージョンでは git または mercurial のみ選択可能)
    ポート番号             リポジトリサーバのポート番号がデフォルトと異なる場合に指定します。
    ユーザ名               リモートリポジトリにアクセスするアカウントのユーザ名を指定します。
    パスワード             リモートリポジトリにアクセスするアカウントのパスワードを指定します。
    ディレクトリ           同期対象となる Kompiraの ディレクトリオブジェクトを指定します。
    設定データを上書きする チェックするとリモートリポジトリからプルする際に Config 型オブジェクトの設定データも上書きします。
    ====================== ====================================================================================================

.. note::
   リモートリポジトリは、あらかじめ作成しておく必要があります。

.. versionadded:: 1.6.7
    設定項目「設定データを上書きする」が追加されました。

初期化
******
Kompira サーバ上にローカルリポジトリを初期化して、リポジトリの内容を Kompira ディレクトリに取り込みます。
初期化ボタンを押したとき、以下の処理が行なわれます。

- リモートリポジトリを複製してローカルリポジトリとして初期化します。
- ローカルリポジトリの内容を Kompira ディレクトリにインポートします。

編集画面で必要なリポジトリ設定項目が入力されると、初期化ボタンが有効になります。


プッシュ
********
指定したブランチに Kompira ディレクトリの変更箇所をコミットして、リモートリポジトリにプッシュします。
プッシュボタンを押したとき、以下の処理が行なわれます。

- ローカルリポジトリを選択したブランチに切り替えます。
- ローカルリポジトリに Kompira ディレクトリをディレクトリ形式でエクスポートします。
- ローカルリポジトリの変更箇所を入力されたコミットメッセージと共にコミットします。
- リモートリポジトリにプッシュします。

変更箇所をコミットするとき、Kompira にログインしているユーザの姓名およびメールアドレスが Author として記録されます。
ただし、姓名が未設定の場合はログインしている ``{ユーザ名}`` が、メールアドレスが未設定の場合は ``{ユーザ名}@{ホスト名}`` が適用されます。

プッシュボタンは初期化後に有効になります。

.. versionchanged:: 1.6.9.post4

    プッシュ操作時に Kompira のログインユーザがコミットの Author として記録されるようになりました。

プル
*****
リモートリポジトリをプルして、指定したブランチの内容を Kompira ディレクトリに上書きで取り込みます。
プルボタンを押したとき、以下の処理が行なわれます。

- リモートリポジトリからプルします。
- ローカルリポジトリを選択したブランチに切り替えます。
- ローカルリポジトリの内容を Kompira ディレクトリに上書きでインポートします。

Kompira ディレクトリにインポートするとき「設定データを上書きする」がチェックされている場合は、Config 型オブジェクトの設定データも上書きします。

プルボタンは初期化後に有効になります。

.. _processes:

-----------------------
プロセス管理
-----------------------

ジョブフローおよびスクリプトジョブの実行状態を管理するためのプロセスについて記述します。

プロセスが作成されるのは、ジョブフローおよびスクリプトジョブが実行されたときです。
実行の開始については :ref:`kompira_object_jobflow` および :ref:`kompira_object_scriptjob` を参照してください。

^^^^^^^^^^^^^^
プロセス一覧
^^^^^^^^^^^^^^
プロセス一覧画面では、実行中もしくは過去に実行されたプロセスの一覧を確認することができます。

デフォルトでは「実行中のプロセス」が選択された状態で、プロセスのステータスが
NEW(新規)、READY(実行可能)、RUNNING(実行中)、WAITING(入力/コマンド完了待ち)のプロセスが表示されます。

プロセスのステータスがDONE(実行完了)、もしくはABORTED(異常終了)のプロセスは既に終了したプロセスです。
これらを確認したい場合は「全てのプロセス」を選択してください。

既に実行が終了しているプロセスについては、一覧画面より削除をすることができます。

.. note::
    一般ユーザーは自身が実行したプロセスのみ閲覧することができます。
    ルート権限を持つユーザーは全てのプロセスを閲覧することができます。

^^^^^^^^^^^^^^
プロセス詳細
^^^^^^^^^^^^^^
プロセス詳細画面では、プロセスの実行状況の確認と制御を行うことができます。

プロセス詳細画面におけるボタン操作、表示されるタブについて次節以降に記述します。

また、プロセス詳細画面では共通のキー操作に加えて以下のキー操作に対応しています。

+--------------+----------------------+--------------------------------------------+
| キーバインド | 操作                 | 備考                                       |
+==============+======================+============================================+
| ``F6``       | プロセスの中止       | 確認ダイアログが表示されます               |
+--------------+----------------------+--------------------------------------------+
| ``F7``       | プロセスの停止       | スクリプトジョブでは対応していません       |
+--------------+----------------------+--------------------------------------------+
| ``F8``       | プロセスの続行       | スクリプトジョブでは対応していません       |
+--------------+----------------------+--------------------------------------------+
| ``CTRL-[``   | 前のタブに切り替え   |                                            |
+--------------+----------------------+--------------------------------------------+
| ``CTRL-]``   | 次のタブに切り替え   |                                            |
+--------------+----------------------+--------------------------------------------+
| ``a``        | テキスト選択切り替え | コンソールタブまたは結果タブで操作できます |
+--------------+----------------------+--------------------------------------------+

.. versionadded:: 1.6.6
    プロセス詳細画面でキー操作が可能になりました。


中止(Terminate)
***************
プロセスの実行を中止します。
中止が選択されたプロセスはステータスがABORTED(異常終了)となり、再開することはできません。

実行中の子プロセスが存在する場合、子プロセスのステータスもABORTED(異常終了)となります。

停止(Suspend)
*************
プロセスの実行を一時的に停止します。

実行中の子プロセスが存在する場合、子プロセスも停止状態となります。

続行(Resume)
************
停止状態のプロセスを再開します。

停止中の子プロセスが存在する場合、子プロセスも再開します。

コンソール
**********
プロセス実行時の出力です。

ジョブフローの場合、print文のメッセージ、リモートコマンドの実行結果、エラー時のスタックトレース等が表示されます。

スクリプトジョブの場合、スクリプトの終了ステータス、標準出力、標準エラー出力が表示されます。

.. note::
    コンソールバッファの最大サイズは64KBに制限されています。
    64KB以上の出力があった場合、確認できるメッセージは最新の64KB分のみであることに注意してください。

ジョブフロー/スクリプト
***********************
実行されたジョブフローおよびスクリプトが表示されます。

ジョブフローの場合は現在実行中の行も合わせて表示されます。

結果
****
プロセス終了時の結果 ``$RESULT`` の内容が JSON 形式で表示されます。

子プロセス一覧
**************
ジョブフローが実行された場合のみ表示される画面で、子プロセスの一覧が確認できます。

子プロセスは、forkやpfor構文を使用して子プロセスを作成するジョブフローを実行した時に作成されます。

設定
****
ジョブフローが実行された場合のみ表示される画面で、プロセスの設定が確認できます。また、停止中には設定を変更することができます。

ここで確認または変更できるのは、:ref:`kompira_object_jobflow_execution` に示したジョブフロー実行に関するオプションです。

.. _manage_process:

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
管理コマンドによるプロセス操作
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Kompira サーバ上において管理コマンド ``/opt/kompira/bin/manage.py process [options...]`` を用いて、Kompira プロセスに対して以下のような操作を行なうことができます。

- プロセスの一覧表示
- プロセスの個数表示
- プロセスの削除
- プロセスの中止
- プロセスの停止
- プロセスの続行

このとき、操作の対象とするプロセスを絞り込む条件を指定することができます。

- プロセスの状態
- 実行しているジョブフロー
- スケジュール起動のプロセスかどうか
- 起動オブジェクトが指定されたプロセスかどうか
- 実行したユーザ
- 開始日時および終了日時
- 実行時間
- コンソール出力に含まれる文字列

プロセス操作オプション
************************

Kompira プロセスに対して行う操作を指定するオプションを以下に示します。

.. tabularcolumns:: |\Y{0.25}|\Y{0.75}|
.. table::
    :class: longtable

    +-------------------------+--------------------------------------------------------------------------------------+
    | オプション              | 説明                                                                                 |
    +=========================+======================================================================================+
    | ``-L``, ``--list``      | プロセスの一覧を表示します。デフォルトではアクティブ状態のプロセスを表示します。     |
    +-------------------------+--------------------------------------------------------------------------------------+
    | ``-C``, ``--count``     | プロセスの個数を表示します。デフォルトでは全ての状態のプロセスの個数を表示します。   |
    +-------------------------+--------------------------------------------------------------------------------------+
    | ``-D``, ``--delete``    | プロセスを削除します。アクティブ状態のプロセスは対象外となります。                   |
    +-------------------------+--------------------------------------------------------------------------------------+
    | ``-T``, ``--terminate`` | プロセスを中止します。既に終了しているプロセスは対象外となります。                   |
    +-------------------------+--------------------------------------------------------------------------------------+
    | ``-S``, ``--suspend``   | プロセスを停止します。既に終了しているまたは停止中のプロセスは対象外となります。     |
    +-------------------------+--------------------------------------------------------------------------------------+
    | ``-R``, ``--resume``    | プロセスを続行します。既に終了しているまたは停止中でないプロセスは対象外となります。 |
    +-------------------------+--------------------------------------------------------------------------------------+

操作を指定するオプションはいずれか1つのみ指定可能で、複数指定した場合は最後のオプションが適用されます。
上記のいずれも指定しなかった場合は、プロセスの一覧表示を行ないます。

.. note::

    大量のプロセスが処理対象となるような場合に、メモリや CPU などのリソース負荷が大きくなる場合がありますのでご注意ください。

プロセス情報の変更を伴う操作（削除、中止、停止、続行）が指定された場合は、実際に制御を適用するかの確認（yes/no の入力）が行なわれます。
制御前の確認を行なわずに適用したい場合は ``-y`` オプションを指定してください。制御を適用せずに動作を確認したい場合は ``--dry-run`` オプションを指定してください。

.. tabularcolumns:: |\Y{0.45}|\Y{0.55}|
.. table::
    :class: longtable

    +-----------------------+------------------------------------+
    | オプション            | 説明                               |
    +=======================+====================================+
    | ``-y``, ``--noinput`` | 確認を行なわずに制御を適用する     |
    +-----------------------+------------------------------------+
    | ``--dry-run``         | 変更を伴う処理を実際には適用しない |
    +-----------------------+------------------------------------+

プロセス絞り込みオプション
****************************

操作対象とする Kompira プロセスを絞り込む条件を指定するオプションを以下に示します。

.. tabularcolumns:: |\Y{0.45}|\Y{0.55}|
.. table::
    :class: longtable

    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | オプション                                            | 説明                                                                                   |
    +=======================================================+========================================================================================+
    | ``-i PID``, ``--pid PID``                             | プロセス ID が ``PID`` であるプロセス（複数指定可能）                                  |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``-a``, ``--all``                                     | 全ての状態のプロセス                                                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--active``                                          | アクティブ状態 (NEW, READY, RUNNING, WAITING のいずれか) のプロセス                    |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--finish``                                          | 終了状態 (ABORTED, DONE のいずれか) のプロセス                                         |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--status {NEW,READY,RUNNING,WAITING,ABORTED,DONE}`` | 指定した状態のプロセス（複数指定可能）                                                 |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--suspended``                                       | 停止中のプロセス                                                                       |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--not-suspended``                                   | 停止中でないプロセス                                                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--parent PARENT``                                   | 親プロセス ID が ``PARENT`` であるプロセス（複数指定可能）                             |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--anyones-child``                                   | 任意の親プロセスを持つプロセス                                                         |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--min-children MIN_CHILDREN``                       | 子プロセスの個数が ``MIN_CHILDREN`` 以上あるプロセス                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--job JOB``                                         | 開始ジョブフローが ``JOB`` に正規表現でマッチするプロセス                              |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--current-job CURRENT_JOB``                         | 実行中ジョブフローが ``CURRENT_JOB`` に正規表現でマッチするプロセス                    |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--scheduled``                                       | スケジューラによって起動されたプロセス                                                 |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--not-scheduled``                                   | スケジューラ以外で起動したプロセス                                                     |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--scheduler-id SCHEDULER_ID``                       | ID が ``SCHEDULER_ID`` のスケジュールによって起動されたプロセス（複数指定可能）        |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--scheduler-name SCHEDULER_NAME``                   | 名称が ``SCHEDULER_NAME`` に正規表現でマッチするスケジュールによって起動されたプロセス |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--invoked``                                         | 起動オブジェクトが記録される方式で実行されたプロセス                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--not-invoked``                                     | 起動オブジェクトが記録されない方式で実行されたプロセス                                 |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--invoker INVOKER``                                 | 起動オブジェクトが ``INVOKER`` (abspath) であるプロセス（複数指定可能）                |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--invoker-type INVOKER_TYPE``                       | 起動オブジェクトの型が ``INVOKER_TYPE`` (abspath) であるプロセス（複数指定可能）       |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--user USER``                                       | 実行ユーザの名称が ``USER`` に一致するプロセス（複数指定可能）                         |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--started-since STARTED_SINCE``                     | 開始日時が ``STARTED_SINCE`` 以降のプロセス                                            |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--started-before STARTED_BEFORE``                   | 開始日時が ``STARTED_BEFORE`` より前のプロセス                                         |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--finished-since FINISHED_SINCE``                   | 終了日時が ``FINISHED_SINCE`` 以降のプロセス                                           |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--finished-before FINISHED_BEFORE``                 | 終了日時が ``FINISHED_BEFORE`` より前のプロセス                                        |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--elapsed-more ELAPSED_MORE``                       | 経過時間（秒数）が ``ELAPSED_MORE`` 以上長いプロセス                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--elapsed-less ELAPSED_LESS``                       | 経過時間（秒数）が ``ELAPSED_LESS`` より短いプロセス                                   |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--console CONSOLE``                                 | コンソール出力に ``CONSOLE`` を含むプロセス                                            |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--head HEAD``                                       | 絞り込み結果の先頭 ``HEAD`` 件を処理対象とします                                       |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--tail TAIL``                                       | 絞り込み結果の末尾 ``TAIL`` 件を処理対象とします                                       |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``-r``, ``--reverse``                                 | 並び順を逆にします                                                                     |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+
    | ``--order ORDER``                                     | ``ORDER`` で指定した順番で並べます                                                     |
    +-------------------------------------------------------+----------------------------------------------------------------------------------------+

- 複数指定可能な絞り込みオプションを複数回指定した場合は、それらを OR 条件として絞り込みます。
- 異なる種類の絞り込みオプションを複数指定した場合は、それらを AND 条件として絞り込みます。
- オプションの日時はジョブフローの ``datetime()`` 組み込み関数が認識できる形式で指定できます。

その他のオプション
****************************

.. tabularcolumns:: |\Y{0.45}|\Y{0.55}|
.. table::
    :class: longtable

    +---------------------------------------+--------------------------------------+
    | オプション                            | 説明                                 |
    +=======================================+======================================+
    | ``--format {table,json,export}``      | プロセスの一覧表示を行なうときの形式 |
    +---------------------------------------+--------------------------------------+
    | ``--datetime-format DATETIME_FORMAT`` | 日時情報を表示するときの形式         |
    +---------------------------------------+--------------------------------------+


.. _scheduler:

-----------------------
スケジューラ
-----------------------

Kompira上に作成したジョブフローおよびスクリプトジョブをスケジューラに登録することで、定期的にジョブを実行させることができます。

スケジューラで設定できる項目の一覧を以下に示します。

.. tabularcolumns:: |\Y{0.30}|\Y{0.25}|\Y{0.45}|
.. table::
    :class: longtable

    +------------------------+----------------+--------------------------------------------+
    | フィールド             | デフォルト値   | 説明                                       |
    +========================+================+============================================+
    | スケジュール名         | なし           | スケジュールの名称                         |
    +------------------------+----------------+--------------------------------------------+
    | 説明                   | なし           | スケジュールについての説明                 |
    +------------------------+----------------+--------------------------------------------+
    | ユーザー               |                | ジョブの実行ユーザー                       |
    +------------------------+----------------+--------------------------------------------+
    | ジョブ                 |                | スケジューラにより実行されるジョブ         |
    +------------------------+----------------+--------------------------------------------+
    | 年                     | \*             | スケジュールを実行する年 (4桁の数字で指定) |
    +------------------------+----------------+--------------------------------------------+
    | 月                     | \*             | スケジュールを実行する月 (1-12を指定)      |
    +------------------------+----------------+--------------------------------------------+
    | 日                     | \*             | スケジュールを実行する日 (1-31を指定)      |
    +------------------------+----------------+--------------------------------------------+
    | ISO週番号              | \*             | スケジュールを実行する週 (1-53を指定)      |
    |                        |                | ISO8601で定められた週番号                  |
    +------------------------+----------------+--------------------------------------------+
    | 曜日名もしくは曜日番号 | \*             | スケジュールを実行する曜日                 |
    |                        |                | (0(月曜日)-6(日曜日)、                     |
    |                        |                | または mon,tue,wed,thu,fri,sat,sunを指定)  |
    +------------------------+----------------+--------------------------------------------+
    | 時                     | \*             | スケジュールを実行する時 (0-23を指定)      |
    +------------------------+----------------+--------------------------------------------+
    | 分                     | \*             | スケジュールを実行する分 (0-59を指定)      |
    +------------------------+----------------+--------------------------------------------+
    | スケジュールの無効化   | false          | trueの場合(チェックがつけられている場合)、 |
    |                        | (チェックなし) | ジョブを実行しない                         |
    +------------------------+----------------+--------------------------------------------+

.. _scheduler_format:

^^^^^^^^^^^^^^^^^^^^^^^^
日時設定フィールドの書式
^^^^^^^^^^^^^^^^^^^^^^^^

日時設定のフィールドには、以下のようにUnixのcronと同じ書式を用いること
ができます。


+--------+------------+--------------------------------------------------------------+
| 書式   | フィールド | 説明                                                         |
+========+============+==============================================================+
| \*     | 全て       | 各値ごとに発火します。                                       |
+--------+------------+--------------------------------------------------------------+
| \*/a   | 全て       | a間隔ごとに発火します。                                      |
+--------+------------+--------------------------------------------------------------+
| a-b    | 全て       | 値がaからbの範囲にあるときに毎回発火します。                 |
+--------+------------+--------------------------------------------------------------+
| a-b/c  | 全て       | 値がaからbの範囲にあるときに、c間隔毎に発火します。          |
+--------+------------+--------------------------------------------------------------+
| xth y  | 日(Day)    | その月のx番目のy曜日に発火します。                           |
+--------+------------+--------------------------------------------------------------+
| last x | 日(Day)    | その月の最終のx曜日に発火します。                            |
+--------+------------+--------------------------------------------------------------+
| last   | 日(Day)    | その月の最終日に発火します。                                 |
+--------+------------+--------------------------------------------------------------+
| x,y,z  | 全て       | 条件xかyかzに発火します（上記の書式の任意の組み合わせが可能）|
+--------+------------+--------------------------------------------------------------+

.. note::

  上記書式において、',', '/', '-'の隣に空白を入れないように注意してください。

例1: 毎年12月の最初の月曜日と最終金曜日の0時0分に発火::

    Month: 12
    Day: 1st mon,last fri

例2: 2012年の4月と8月の15-20の12時30分に発火::

    Year: 2012
    Month: 4,8
    Day: 15-20
    Hour: 12
    Minute: 30

例3: 平日に1時間毎に発火::

    Day of week: mon-fri
    Hour: *

例4: 毎年1月1日0時0分に発火::

    Year: *



.. _settings:

-----------------------
設定
-----------------------

Kompira画面上部の「設定」より行える各種設定について記述します。

.. _settings_user:

^^^^^^^^^^^^^^
ユーザー管理
^^^^^^^^^^^^^^

Kompira上に登録されているユーザーの一覧を確認することができます。

初期状態で用意されているユーザーを以下に示します。

.. tabularcolumns:: |\Y{0.2}|\Y{0.2}|\Y{0.6}|
.. table::
    :class: longtable

    +------------+------------+--------------------------------------------------------+
    | ユーザー名 | パスワード | 説明                                                   |
    +============+============+========================================================+
    | guest      | guest      | ゲスト用ユーザーです。                                 |
    +------------+------------+--------------------------------------------------------+
    | root       | root       | ルートユーザーです。                                   |
    +------------+------------+--------------------------------------------------------+
    | admin      | admin      | 管理用ユーザーです。                                   |
    |            |            | アクセス許可設定とは無関係に全てのオブジェクトに対して |
    |            |            | アクセス可能です。                                     |
    |            |            | デフォルトでは無効のユーザーとなっています。           |
    +------------+------------+--------------------------------------------------------+

ユーザー名は、以下の規則内で自由に命名することができます。

- 記号以外の文字、数字、アンダーバー("_")を使うことができる
- 先頭の文字は数字以外でなければいけない
- アルファベットの大文字と小文字は区別される
- ユーザ名の長さは30文字以内でなければいけない

ユーザーを新規作成すると/home/<ユーザー名>/ ディレクトリが作成され、自動的にホームとして設定されます。

一般ユーザーは自身のユーザー情報のみ編集可能です。ただし、自身のグループや有効フィールドを変更することはできません。
全てのユーザー情報を編集できるのはルート権限を持つユーザーに限定されています。

ユーザーごとに設定できる項目の一覧を以下に示します。


+--------------------+--------------------------------------------------------+
| フィールド         | 説明                                                   |
+====================+========================================================+
| ユーザー名         | システムでユーザーの識別に使用する名称                 |
+--------------------+--------------------------------------------------------+
| 姓                 | ユーザーの姓                                           |
+--------------------+--------------------------------------------------------+
| 名                 | ユーザーの名                                           |
+--------------------+--------------------------------------------------------+
| Eメール            | ユーザーのメールアドレス                               |
+--------------------+--------------------------------------------------------+
| グループ           | ユーザーが所属するグループ                             |
+--------------------+--------------------------------------------------------+
| 有効               | false(チェックなし)の場合、                            |
|                    | ユーザーのログインを許可しない                         |
+--------------------+--------------------------------------------------------+
| LDAPユーザ         | true(チェックあり)の場合、LDAPユーザを表す             |
+--------------------+--------------------------------------------------------+
| ホーム             | ユーザーがログインしたときに最初に表示するページ       |
+--------------------+--------------------------------------------------------+
| 環境変数           | ジョブフロー実行時、自動的に変数として読み込まれる     |
|                    | 環境変数オブジェクト                                   |
+--------------------+--------------------------------------------------------+

.. note::
    guest、root、adminユーザーを削除することはできません。また、自分自身を削除することもできません。

.. note::
    グループ、有効、LDAPユーザの各フィールドは、特権ユーザのみ変更することができます。
    ただし、組み込みユーザ(admin, root, guest) の LDAPユーザフィールドを変更することはできません。
    また、LDAPユーザのパスワードを変更することはできません(必要な場合はLDAPサーバ側でパスワード変更を行ってください)。


アカウントロックの解除
**********************

アカウントがロックされるとロックされたユーザの情報表示画面の下部に警告メッセージとともにアクセス元のIPアドレスの一覧が表示されます。
合わせて表示されるロック解除ボタンを押すことで、当該ユーザのアカウントロックを解除できます。

また、Kompiraサーバに端末ログインして、以下の管理コマンドを実行してロック解除することも可能です。

``axes_reset`` は全てのアカウントロックを一斉に削除します。

.. code::

    /opt/kompira/bin/manage.py axes_reset

``axes_reset_ip`` は指定した IP アドレスからのアカウントロックを解除します。

.. code::

    /opt/kompira/bin/manage.py axes_reset_ip [ip ...]

``axes_reset_username`` は指定したユーザのアカウントロックを解除します。

.. code::

    /opt/kompira/bin/manage.py axes_reset_username [username ...]


また、``axes_list_attempts`` コマンドを実行するとログインに失敗した履歴の一覧が表示されます。
（ロックを解除すると該当する履歴は削除されます）

.. code::

    /opt/kompira/bin/manage.py axes_list_attempts


.. _settings_group:

^^^^^^^^^^^^^^
グループ管理
^^^^^^^^^^^^^^

Kompira上に登録されているグループの一覧を確認することができます。

初期状態で用意されているグループを以下に示します。

+------------+-----------------------------------------+
| グループ名 | 説明                                    |
+============+=========================================+
| other      | Kompira上の全てのユーザが属するグループ |
+------------+-----------------------------------------+
| wheel      | ルート特権を持つユーザが属するグループ  |
+------------+-----------------------------------------+

グループ名は、以下の規則内で自由に命名することができます。

- 記号以外の文字、数字、アンダーバー("_")を使うことができる
- 先頭の文字は数字以外でなければいけない
- アルファベットの大文字と小文字は区別される
- グループ名の長さは30文字以内でなければいけない

グループ情報を編集できるのはルート権限を持つユーザーに限定されています。

.. note::
  - otherとwheelグループを削除することはできません。
  - otherグループに所属するユーザーの判定は設定にかかわらず、上記のとおりとなります。すなわち、otherグループに所属するユーザ設定は無視されます。


.. _settings_realm:

^^^^^^^^^^^^^^
管理領域設定
^^^^^^^^^^^^^^
管理領域とは、ジョブマネージャごとに管理するネットワーク領域のことです。

Kompiraで複数のジョブマネージャを使用する際、ジョブマネージャAは192.168.1.*へのアクセス、
ジョブマネージャBは192.168.2.*へのアクセスというように、各ジョブマネージャが管理する領域を定めることができます。

管理領域ごとに設定できる項目の一覧を以下に示します。

.. tabularcolumns:: |\Y{0.2}|\Y{0.8}|
.. table::
    :class: longtable

    +------------+---------------------------------------------------------------+
    | フィールド | 説明                                                          |
    +============+===============================================================+
    | 表示名     | 管理領域の表示名を指定します。                                |
    +------------+---------------------------------------------------------------+
    | 説明       | 管理領域の説明を記述します。                                  |
    +------------+---------------------------------------------------------------+
    | 無効化     | 対象管理領域を一時的に無効にする場合にセットします。          |
    +------------+---------------------------------------------------------------+
    | 範囲       | 管理領域の範囲をIPアドレスやホスト名で指定します。            |
    |            | 複数指定することができ、またワイルドカード(*)も使用可能です。 |
    +------------+---------------------------------------------------------------+

管理領域情報を編集できるのはルート権限を持つユーザーに限定されています。

デフォルトでは、defaultという管理領域があり、その範囲は'*'と設定されています。
この場合、管理領域がdefaultのジョブマネージャで全てのリモートコマンドを実行します。

ジョブマネージャが1台のみの構成でKompiraを使用する場合、もしくはジョブマネージャごとに管理領域を
設定しなくてもよいという場合、管理領域設定を変更する必要はありません。

ジョブマネージャの状態確認
**************************
管理領域設定画面では、各管理領域に登録されているジョブマネージャの動作状況を確認することができます。

ジョブマネージャ状態として、以下の項目が表示されます。

+------------+---------------------------------------------------------+
| 値         | 説明                                                    |
+============+=========================================================+
| ホスト名   | ジョブマネージャが動作しているホストの名称              |
+------------+---------------------------------------------------------+
| プロセスID | ジョブマネージャプロセス(kompira_jobmngrd)のプロセスID  |
+------------+---------------------------------------------------------+
| バージョン | ジョブマネージャのKompiraバージョン                     |
+------------+---------------------------------------------------------+
| ステータス | ジョブマネージャの動作状況('動作中'もしくは'ダウン')    |
+------------+---------------------------------------------------------+

ステータスが「動作中」となっていれば、ジョブマネージャはKompiraと通信可能で、
リモートコマンドが実行できる状態です。

.. _settings_system_config:

^^^^^^^^^^^^
システム設定
^^^^^^^^^^^^

システム設定画面では、Kompira システム全体の設定を行います。

設定項目の一覧を以下に示します。

.. tabularcolumns:: |\Y{0.4}|\Y{0.6}|
.. table::
    :class: longtable
    :widths: auto

    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    | 項目名 (キー名)                | 説明                                                                                                      |
    +================================+===========================================================================================================+
    | サーバURL (serverUrl)          | Kompira サーバの URL                                                                                      |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 管理者メールアドレス          | Kompira サーバの管理者のメールアドレスを設定します。                                                      |
    || (adminEmail)                  | メール送信時に、from アドレスのデフォルト値として使われます。                                             |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 正常終了時メールテンプレート  | ジョブフローが正常に終了した場合に送信するメールのテンプレートを選択します。                              |
    || (doneMailTemplate)            |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 異常終了時メールテンプレート  | ジョブフローが異常終了した場合に送信するメールのテンプレートを選択します。                                |
    || (abortMailTemplate)           |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || SMTP サーバ (smtpServer)      | メール送信時の SMTP サーバを選択します。                                                                  |
    ||                               | 省略した場合は、localhost の SMTP サーバが使われます。                                                    |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || LDAP サーバ (ldapServer)      | LDAP連携に使用する LDAP サーバを選択します。                                                              |
    ||                               | 省略した場合、LDAP連携は行いません。                                                                      |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 最大ログイン試行回数          | 指定した回数で連続してログインに失敗した場合、アカウントをロックします。                                  |
    || (loginFailureLimit)           | 0以下の値や空に設定した場合、アカウントロックを行いません。                                               |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || アカウントロック期間          | アカウントをロックする期間を分単位で指定します。指定した期間が経過するとロックが自動的に解除されます。    |
    || (accountLockoutTime)          | 0以下の値や空に設定した場合、アカウントロックの自動解除は行いません。                                     |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || コマンド表示可否              | 実行ジョブによるコマンドまたはスクリプトの実行時、セッションブロックの開始時、                            |
    || (showCommandEnabled)          | および再起動ジョブの実行時に、実行するコマンドやジョブの情報をコンソールに表示する場合はチェックします。  |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || コマンド表示形式              | 実行するコマンドやジョブの情報を表示する場合のフォーマットを指定します。                                  |
    || (showCommandFormat)           |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 標準出力表示可否              | コマンド実行による標準出力をコンソールに表示する場合はチェックします。                                    |
    || (showStdoutEnabled)           |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 標準出力表示フィルタ          | 標準出力のコンソールへの表示が許可されているとき、どれだけ表示するかを設定します。                        |
    || (showStdoutFilter)            |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 標準エラー出力表示可否        | コマンド実行による標準エラー出力をコンソールに表示する場合はチェックします。                              |
    || (showStderrEnabled)           |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 標準エラー出力表示フィルタ    | 標準エラー出力のコンソールへの表示が許可されているとき、どれだけ表示するかを設定します。                  |
    || (showStderrFilter)            |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || セッション表示可否            | セッション実行中に受信した出力をコンソールに表示する場合はチェックします。                                |
    || (showSessionEnabled)          |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || セッション表示フィルタ        | セッション出力のコンソールへの表示が許可されているとき、どれだけ表示するかを設定します。                  |
    || (showSessionFilter)           |                                                                                                           |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || 編集時のパスワード非表示      | チェックするとオブジェクト編集時にパスワードフィールドに設定されているパスワードが表示できなくなります。  |
    || (hidePasswordWhileEditing)    | 新たに入力したパスワードはオブジェクトを保存するまでは目のアイコンをクリックして表示することができます。  |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || カスタムスタイル              | ブラウザで表示される画面の配色などの設定を持つカスタムスタイルを選択します。                              |
    || (customStyle)                 | 複数の Kompira サーバを利用している際などに区別しやすくなります。                                         |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+
    || ブランドタグ                  | メニューバー左上などにあるブランド名表記に続けて表示されるブランドタグを文字列で設定できます。            |
    || (brandTag)                    | デフォルトは指定無しで、最大16文字設定できます。                                                          |
    ||                               | ブランドタグが指定されている場合は、ブランド名のあとに空白をあけて ``[`` と ``]`` に挟んで表示されます。  |
    +--------------------------------+-----------------------------------------------------------------------------------------------------------+


.. note::
    システム設定 (/system/config) は設定型オブジェクト (:type_object:`Config`) ですので、ジョブフローから設定のデータ辞書に対して、キー名で参照することが可能です。

.. note::
    パスワード非表示モードが有効な場合、パスワード辞書 (Dictionary<Password>) フィールドやパスワード配列 (Array<Password>) フィールドを含むオブジェクトを
    複数の場所から同時に編集すると、後から保存されたパスワードが未変更の場合、その値が常に反映されることは保証されません。

.. versionadded:: 1.6.8
    最大ログイン試行回数 (loginFailureLimit) とアカウントロック期間 (accountLockoutTime)、編集時のパスワード非表示 (hidePasswordWhileEditing) が追加されました。

.. versionchanged:: 1.6.8
    コマンド表示可否 (showCommandEnabled) のデフォルト値が false に変更になりました。

コマンド表示形式
****************

コマンド表示する際の表示形式を文字列で指定します。項目名を ``{}`` で囲って記述することで、実行時の情報が埋め込まれてコンソールに表示されます。コマンド表示形式のデフォルト値は以下の通りです。

.. code::

    [{username}@{hostname}]{sudomark} {command}


コマンド表示形式では以下の項目を指定することができます。規定されていない項目名を指定した場合は無視されます。

.. tabularcolumns:: |\Y{0.2}|\Y{0.8}|
.. table::
    :class: longtable

    +----------+----------------------------------------------------------------------------------------------------------------+
    | 項目名   | 説明                                                                                                           |
    +==========+================================================================================================================+
    | now      | 現在日時                                                                                                       |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | jobtype  | ジョブの種別（"COMMAND", "SCRIPT", "SESSION", "REBOOT" のいずれか）                                            |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | conntype | 制御変数で指定された接続種別（"ssh", "windows/http", など）                                                    |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | hostname | 制御変数で指定されたリモートホスト名またはIPアドレス（ローカルの場合は "localhost"）                           |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | port     | 制御変数で指定されたポート番号（指定されてない場合は ""）                                                      |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | username | 制御変数で指定されたリモートアクセス時のユーザ名（ローカルの場合は "kompira"）                                 |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | sudomark | 通常は ``$`` となり、``__sudo__=true`` の場合は ``#`` となります。                                             |
    +----------+----------------------------------------------------------------------------------------------------------------+
    | command  | コマンドラインを示す文字列で、ジョブ種別ごとに異なります。ジョブ種別ごとの詳細なフォーマットは指定できません。 |
    +----------+----------------------------------------------------------------------------------------------------------------+

このうち、項目 ``command`` はジョブ種別ごとに以下のように展開されます。

- コマンド実行の場合 (jobtype="COMMAND")

    - 実行ジョブに指定されたコマンドライン全体

- スクリプトジョブ実行の場合 (jobtype="SCRIPT")

    - ``{script_job.abspath}.{script_jop["ext"]} {args}``
    - ここで script_job は実行ジョブに渡されたスクリプトジョブオブジェクトを、args は実行ジョブに渡されたパラメータを意味します。

- セッションブロックの場合 (jobtype="SESSION")

    - ``<SESSION: {session_id}>``

- 再起動ジョブの場合 (jobtype="REBOOT")

    - ``reboot``


コマンド表示形式には Python3 の str.format() と同じ形式が利用できます。
設定された表示形式の不正によりエラーが発生するような場合は、デフォルトの表示形式が適用されます。


コンソール表示フィルタ
**********************

標準出力表示フィルタ、標準エラー出力表示フィルタ、セッション表示フィルタは、
共通の形式でコンソール表示に際してのフィルタ条件を設定することができます。

設定された形式によって、いくつかのフィルタの種類があり、
出力が得られたときにコンソールに表示するかどうかなどの振る舞いが異なります。

フィルタが空の場合、無制限に表示されます。

- 得られた出力をすべてコンソールに表示します。

フィルタを <数値><単位> という形式で設定すると、指定した量だけ表示されます。
例えば ``10L`` と設定すると、先頭の 10 行分だけ表示されます。

- ジョブ開始時点から指定した数量まではコンソールに表示し、それ以降は抑止されて表示しなくなります。
- <数値> は整数で指定できます。
- <単位> は省略可能で、以下のいずれかが指定できます。大文字・小文字は区別しません。

    - ``L``, ``LINES`` が指定された場合は行数でカウントします。出力がバイナリの場合は 0x0A で区切ってカウントします。
    - 単位を省略した時は文字数でカウントします。出力がバイナリの場合はバイト数でカウントします。
    - 規定されていない単位が指定された場合は、文字数またはバイト数でカウントします。

- <数値> に 0 (または負の値) を指定すると、まったく表示されなくなります。
- 指定された数量に達したあとに1文字以上の出力を得た場合は、一度だけ ``...`` と改行をコンソールに表示します。


.. _settings_system_startup:

^^^^^^^^^^^^^^^^^^^^^^^^^^
スタートアップジョブフロー
^^^^^^^^^^^^^^^^^^^^^^^^^^

スタートアップディレクトリ (/system/startup) には、Kompira サーバ起動時
に自動的に実行を開始するスタートアップジョブフローを登録することができ
ます。複数のジョブフローが登録されている場合、名前順に実行されます。ス
タートアップディレクトリの下には、ジョブフロー以外のオブジェクトも作成
することができます。スタートアップディレクトリの下にサブディレクトリを
作成し、その中にジョブフローを登録した場合、それらのジョブフローは実行
されません。スタートアップジョブフローは、引数を持ちません。また、root
ユーザーで実行されます。

.. _settings_license:

^^^^^^^^^^^^^^^^
ライセンス管理
^^^^^^^^^^^^^^^^

Kompiraのライセンスを確認することができます。

ライセンス管理画面で確認できる項目の一覧を以下に示します。

+------------------+------------------------------------------------------+
| フィールド       | 説明                                                 |
+==================+======================================================+
| ライセンスID     | ライセンスファイルの固有ID                           |
+------------------+------------------------------------------------------+
| エディション     | ライセンスの種類                                     |
+------------------+------------------------------------------------------+
| ハードウェアID   | Kompiraサーバのハードウェア固有ID                    |
+------------------+------------------------------------------------------+
| 有効期限         | ライセンスの有効期限                                 |
+------------------+------------------------------------------------------+
| 登録済みノード数 | | ジョブフローから接続したことのあるノードの数       |
|                  | | リセットを選択することで接続の履歴を削除する       |
+------------------+------------------------------------------------------+
| ジョブフロー数   | オブジェクトとして登録されているジョブフローの数     |
+------------------+------------------------------------------------------+
| スクリプト数     | オブジェクトとして登録されているスクリプトジョブの数 |
+------------------+------------------------------------------------------+
| 使用者           | ライセンスの使用者                                   |
+------------------+------------------------------------------------------+
| 署名             | ライセンスファイル署名                               |
+------------------+------------------------------------------------------+

登録済みノード数、ジョブフロー数、スクリプト数の欄にはライセンスに応じた上限数が合わせて表示されます。

ライセンスファイルが未登録の場合、Kompiraは仮ライセンスとして動作します。仮ライセンスはKompiraインストールから1週間の間自由にお使い頂けるライセンスです。

ライセンスの登録
****************
ライセンス管理画面右側の編集ボタンを押すと、ライセンスファイルのアップロード画面に移動します。

「ファイルを選択」を押してライセンスファイルを登録後、保存ボタンを押すことでライセンス登録が完了します。


.. note::
    ライセンスファイルは/var/opt/kompira/kompira.licに保存されます。
    上記パスにライセンスファイルを直接配置すれば、ライセンス管理画面に
    アクセスすることなくライセンスの登録をすることが可能です。

.. _troubleshooting:

-----------------------
トラブルシューティング
-----------------------

Kompiraをブラウザから操作してエラーが発生した場合の原因と対処方法を記述します。

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
「Jobflow の数が制限を超えました。」「ScriptJob の数が制限を超えました。」と表示される
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Kompiraで作成できるジョブフロー、スクリプトジョブオブジェクトの数は、ライセンスによる制限があります。

ライセンスが定める制限数を超えてオブジェクトを作成しようとすると、エラーメッセージが表示されて作成に失敗します。

ライセンス管理ページより、オブジェクトの数を確認してください。

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
「Kompiraエンジンが停止しています」と表示される
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

kompiradプロセスが停止している場合に表示されるメッセージです。

/var/log/kompira以下のログファイルを確認の上、kompiradプロセスの起動を行ってください。

.. seealso:: :ref:`process_daemon`, :ref:`file_log`

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
「データベース接続エラーです」と表示される
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

データベースに接続できない場合に表示されるメッセージです。

下記コマンドにより、データベースプロセスの状態確認と再起動処理を行なうことができます。

.. code::

    # systemctl status postgresql-<pgver>.service
    # systemctl restart postgresql-<pgver>.service

.. note::

    ``<pgver>`` の部分はインストールされている PostgreSQL のバージョンに合わせてください。

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
「内部エラーです」と表示される
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Kompira内部で予期しないエラーが発生した際に表示されます。

/var/log/kompira以下のログファイルを確認の上、 support@kompira.jp までご連絡ください。


^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
kompira_dump.sh による情報収集とサポートへの問合せ
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Kompira 上の問題を解決するために各種ログファイルや設定ファイルなど、
様々な情報の確認が必要になる場合があります。

Kompira サーバ上で ``/opt/kompira/bin/kompira_dump.sh`` を root 権限で実行すると、
以下のように問題の解決に役立つ情報を自動的に収集します。
なお、データベースのダンプを含むためサイズが大きくなる場合があります。
スクリプトを実行する場所に十分に空き容量があることを確認してください。 ::

    $ sudo /opt/kompira/bin/kompira_dump.sh
    2014-11-18 15:18:52 # mkdir /home/ec2-user/kompira_dump-20141118-151852
    ###
    ### kompira_dump ver 1.0.0
    ### dump started: 2014-11-18 15:18:52
    ###
    ========== system ==========
    2014-11-18 15:18:52 # mkdir /home/ec2-user/kompira_dump-20141118-151852/system
    2014-11-18 15:18:52 # cp -a /etc/os-release /etc/system-release ./
    2014-11-18 15:18:52 # printenv
    2014-11-18 15:18:52 # who -aH
        :
        :
        :
    ========== kompira ==========
    2014-11-18 15:19:09 # mkdir /home/ec2-user/kompira_dump-20141118-151852/kompira
    2014-11-18 15:19:09 # /opt/kompira/bin/kompirad --version
    2014-11-18 15:19:09 # /opt/kompira/bin/manage.py license_info
    2014-11-18 15:19:10 # /opt/kompira/bin/manage.py dumpdata -a
    2014-11-18 15:19:16 # cp -a /opt/kompira/kompira.conf ./
    2014-11-18 15:19:16 # cp -a /var/opt/kompira/kompira.lic ./
    2014-11-18 15:19:16 # tar -cf - /var/log/kompira
    tar: Removing leading `/' from member names
    ---------- kompira ----------
    ###
    ### dump finished: 2014-11-18 15:19:16
    ###
    compressing...
    /home/ec2-user/kompira_dump-20141118-151852.tar.gz

最後の行に収集結果をまとめたファイルが表示されます（上の例では
kompira_dump-20141118-151852.tar.gz）ので、問題の状況と共に
このファイルを添付して support@kompira.jp までお問い合わせください。

なお、この .tar.gz ファイルは暗号化などの処理は行なっていないため、
送付時にはお客様のセキュリティポリシーにしたがって必要な処理を行ってください。

収集しない項目
**************

kompira_dump.sh では以下のような秘密情報は収集しません。

- Kompira サーバに設定されたアカウント・パスワード情報

収集する項目
************

kompira_dump.sh では以下のような情報を収集します。

- システム情報
    - プロセス情報(ps ,top など)
    - サービス情報(service, chkconfig など)
    - インストール済みパッケージ情報(yum, rpm ,pip など)
    - カーネル情報(sysctl, lsmod, /proc/{version,*info,*stat} など)
    - ログファイル(/var/log/{dmesg,messages} など)
- ネットワーク情報
    - インターフェース情報(ip link, ip addr ,ip route など)
    - ファイアーウォール情報(iptables -L など)
    - ネットワーク状態(netstat, traceroute など)
- Apache に関する情報
    - サービス状態 (service httpd status など)
    - ログファイル (/var/log/httpd/)
    - 設定ファイル (/etc/httpd)
- RabbitMQ に関する情報
    - サービス状態 (service rabbitmq-server status)
    - ログファイル (/var/log/rabbitmq/)
- PostgreSQL に関する情報
    - サービス状態 (service postgresql-<pgver> status)
    - ログファイル (/var/lib/pgsql/<pgver>/data/{pg_log,pgstartup.log})
- Kompira に関する情報
    - バージョン (kompirad --version)
    - ライセンス情報 (manage.py license_info など)
    - データベースのダンプ (manage.py dumpdata -a)
    - 設定ファイル (/opt/kompira/kompira.conf)
    - ログファイル (/var/log/kompira/)

.. note::
    Kompira データベースのダンプを含むため **Kompira オブジェクトやジョブフロー上に
    記載されたノード情報、アカウント・パスワード情報は含まれる** ことに注意してください。
