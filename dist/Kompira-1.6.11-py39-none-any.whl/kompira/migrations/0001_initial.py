# Generated by Django 3.0.5 on 2020-07-31 05:16

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import kompira.core.event
import kompira.core.object
import kompira.core.virtual
import kompira.jobflow.api
import kompira.models.extends.object
import kompira.models.extends.type_object
import kompira.models.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and _ only. First character is letters and _ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^([^\\W0-9]\\w*)$'), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['id'],
            },
            bases=(kompira.core.virtual.VirtualObject, models.Model),
        ),
        migrations.CreateModel(
            name='BaseObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abspath', models.CharField(max_length=1024, unique=True, verbose_name='kompira object path')),
                ('display_name', models.CharField(blank=True, default='', max_length=1024, verbose_name='display name')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created time')),
                ('updated', models.DateTimeField(verbose_name='updated time')),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='owns', to=settings.AUTH_USER_MODEL, verbose_name="object's owner")),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128, verbose_name='name')),
                ('display_name', models.CharField(blank=True, default='', max_length=128, verbose_name='display name')),
                ('type', models.CharField(max_length=1024, verbose_name='type expression')),
                ('qual', models.CharField(max_length=1024, null=True, verbose_name='type qualifier')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_data', to='kompira.BaseObject')),
            ],
            options={
                'unique_together': {('name', 'object')},
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Incident name')),
                ('device', models.CharField(max_length=255, verbose_name='Device name')),
                ('service', models.CharField(max_length=255, verbose_name='Service name')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Opened time of incident')),
                ('closed_date', models.DateTimeField(blank=True, null=True, verbose_name='Closed time of incident')),
                ('status', models.CharField(choices=[('OPENED', 'Opened'), ('WORKING', 'Working'), ('CLOSED', 'Closed')], default='OPENED', max_length=7, verbose_name='Incident status')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Incident owner ID')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incidents',
                'ordering': ['-id'],
            },
            bases=(kompira.core.virtual.VirtualObject, models.Model),
        ),
        migrations.CreateModel(
            name='ListField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=1024, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_time', models.DateTimeField(blank=True, null=True, verbose_name='Process started time')),
                ('finished_time', models.DateTimeField(blank=True, null=True, verbose_name='Process finished time')),
                ('status', models.CharField(choices=[('NEW', 'New'), ('READY', 'Ready'), ('RUNNING', 'Running'), ('WAITING', 'Waiting'), ('ABORTED', 'Aborted'), ('DONE', 'Done')], default='NEW', max_length=7, verbose_name='Process status')),
                ('suspended', models.BooleanField(default=False, verbose_name='Process is suspeneded')),
                ('lineno', models.IntegerField(blank=True, default=0, null=True, verbose_name='Execution line number')),
                ('console', models.TextField(blank=True, default='', verbose_name='Process console message')),
                ('exit_status', models.IntegerField(blank=True, null=True, verbose_name='Process exit status')),
                ('result', kompira.models.fields.KompiraJsonField(blank=True, null=True, verbose_name='Process result')),
                ('error', kompira.models.fields.KompiraJsonField(blank=True, null=True, verbose_name='Process error')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='kompira.Process', verbose_name='Parent process')),
            ],
            options={
                'verbose_name': 'Process',
                'verbose_name_plural': 'Processes',
                'ordering': ['-id'],
            },
            bases=(kompira.core.virtual.VirtualObject, models.Model, kompira.core.event.Channelize),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Schedule name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description of schedule')),
                ('year', models.CharField(blank=True, max_length=255, null=True, verbose_name='Year number')),
                ('month', models.CharField(blank=True, max_length=255, null=True, verbose_name='Month number (1-12)')),
                ('day', models.CharField(blank=True, max_length=255, null=True, verbose_name='Day of the month (1-31)')),
                ('week', models.CharField(blank=True, max_length=255, null=True, verbose_name='ISO week number (1-53)')),
                ('day_of_week', models.CharField(blank=True, max_length=255, null=True, verbose_name='number or name of weekday')),
                ('hour', models.CharField(blank=True, max_length=255, null=True, verbose_name='hour (0-23)')),
                ('minute', models.CharField(blank=True, max_length=255, null=True, verbose_name='minute (0-59)')),
                ('disabled', models.BooleanField(default=False, verbose_name='Schedule is disabled')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Schedule user ID')),
            ],
            options={
                'ordering': ['id'],
            },
            bases=(kompira.core.virtual.VirtualObject, models.Model),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'ordering': ['id'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(kompira.core.virtual.VirtualObject, 'auth.group'),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='Worklog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description of worklog')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='worklogs', to='kompira.Incident', verbose_name='Incident')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Worklog',
                'verbose_name_plural': 'Worklogs',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TaskBinaryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BinaryField(blank=True, default=b'', verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binarydata_data', to='kompira.ListField')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='Task name')),
                ('title', models.CharField(max_length=1024, verbose_name='Task title')),
                ('message', models.TextField(verbose_name='Task message')),
                ('action_text', models.TextField(blank=True, null=True, verbose_name='Task action')),
                ('status', models.CharField(choices=[('ONGOING', 'Ongoing'), ('WAITING', 'Waiting'), ('DONE', 'Done'), ('CANCELED', 'Canceled')], default='ONGOING', max_length=8, verbose_name='Task status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created time of task')),
                ('closed_date', models.DateTimeField(blank=True, null=True, verbose_name='Closed time of task')),
                ('assigned_groups', models.ManyToManyField(related_name='assigned_tasks', to='kompira.Group', verbose_name='assigned groups')),
                ('assigned_users', models.ManyToManyField(related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='assigned users')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='own_tasks', to=settings.AUTH_USER_MODEL, verbose_name='owner of this task')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['-id'],
            },
            bases=(kompira.core.event.ModelChannelize, kompira.core.virtual.VirtualObject, models.Model),
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.BinaryField(verbose_name='Snapshot data')),
                ('process', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='kompira.Process', verbose_name='related process')),
            ],
            options={
                'verbose_name': 'Snapshot',
                'verbose_name_plural': 'Snapshots',
            },
        ),
        migrations.CreateModel(
            name='ScheduleParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.TextField(blank=True, default='', verbose_name='Schedule parameter')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='kompira.Schedule')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProtectedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProtectedObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='kompira.BaseObject')),
            ],
        ),
        migrations.CreateModel(
            name='ProtectedGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='kompira.Group')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_mode', models.BooleanField(default=False, verbose_name='step mode')),
                ('checkpoint_mode', models.BooleanField(default=False, verbose_name='checkpoint mode')),
                ('monitoring_mode', models.CharField(choices=[('NOTHING', 'Do nothing'), ('MAIL', 'Sending mail at the time of process finished'), ('ABORT_MAIL', 'Sending mail at the time of process aborted')], default='NOTHING', max_length=10, verbose_name='monitoring mode')),
                ('process', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='kompira.Process', verbose_name='related process')),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
            },
        ),
        migrations.AddField(
            model_name='process',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processes', to='kompira.Schedule', verbose_name='Process schedule'),
        ),
        migrations.AddField(
            model_name='process',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL, verbose_name='Process user ID'),
        ),
        migrations.AddField(
            model_name='listfield',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='list_field', to='kompira.Task'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Detail information')),
                ('status', models.CharField(max_length=255, verbose_name='Type of alert')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='kompira.Incident', verbose_name='Incident')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of his/her group.', related_name='user_set', related_query_name='user', to='kompira.Group', verbose_name='groups'),
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.baseobject', kompira.core.object.CheckPermissionMixin, kompira.models.extends.object.ObjectCacheMixin, kompira.jobflow.api.WithAPIMixin),
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readable', models.BooleanField(default=False)),
                ('writable', models.BooleanField(default=False)),
                ('executable', models.BooleanField(default=False)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uperms', to='kompira.BaseObject')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('owner', 'object')},
            },
        ),
        migrations.CreateModel(
            name='TimeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.TimeField(blank=True, null=True, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timedata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='StringData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.TextField(blank=True, default='', verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stringdata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='IntegerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.BigIntegerField(blank=True, null=True, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integerdata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='GroupPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('readable', models.BooleanField(default=False)),
                ('writable', models.BooleanField(default=False)),
                ('executable', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gperms', to='kompira.BaseObject')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kompira.Group')),
            ],
            options={
                'unique_together': {('owner', 'object')},
            },
        ),
        migrations.CreateModel(
            name='FloatData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.FloatField(blank=True, null=True, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floatdata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='DateTimeData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.DateTimeField(blank=True, null=True, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datetimedata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='DateData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.DateField(blank=True, null=True, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datedata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='BooleanData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.BooleanField(default=False, verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booleandata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.CreateModel(
            name='BinaryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('value', models.BinaryField(blank=True, default=b'', verbose_name='value')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binarydata_data', to='kompira.Field')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.AddField(
            model_name='baseobject',
            name='parent_object',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_objects', to='kompira.Object'),
        ),
        migrations.AddField(
            model_name='user',
            name='environment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_env_set', to='kompira.Object', verbose_name='environment'),
        ),
        migrations.AddField(
            model_name='user',
            name='home_directory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_home_set', to='kompira.Object', verbose_name='home'),
        ),
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(kompira.core.event.ModelChannelize, 'kompira.object'),
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(kompira.models.extends.type_object.TypeableMixin, 'kompira.object'),
        ),
        migrations.CreateModel(
            name='Directory',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(kompira.models.extends.type_object.TypeableMixin, 'kompira.object'),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='NodeInfo',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Realm',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='SystemInfo',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.CreateModel(
            name='TypeObject',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=(kompira.models.extends.type_object.TypeableMixin, 'kompira.object'),
        ),
        migrations.CreateModel(
            name='Virtual',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.object',),
        ),
        migrations.AddField(
            model_name='schedule',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kompira.Job', verbose_name='Job'),
        ),
        migrations.AddField(
            model_name='process',
            name='current_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_processes', to='kompira.Job', verbose_name='Current job'),
        ),
        migrations.AddField(
            model_name='process',
            name='job',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kompira.Job', verbose_name='Job'),
        ),
        migrations.CreateModel(
            name='ObjectData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1024, null=True, verbose_name='key')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectdata_data', to='kompira.Field')),
                ('value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='kompira.Object', verbose_name='value')),
            ],
            options={
                'abstract': False,
                'unique_together': {('key', 'field')},
                'index_together': {('field', 'id')},
            },
        ),
        migrations.AddField(
            model_name='baseobject',
            name='type_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instance_objects', to='kompira.TypeObject'),
        ),
        migrations.CreateModel(
            name='Jobflow',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.job',),
        ),
        migrations.CreateModel(
            name='MailChannel',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.channel',),
        ),
        migrations.CreateModel(
            name='ScriptJob',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.job',),
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kompira.directory',),
        ),
    ]
